{"version":3,"sources":["Component/Category/Dialog.AddCategory.jsx","Component/Category/Dialog.EditCategory.jsx","Component/Branch/Dialog.EditBranch.jsx","Component/Branch/Table.Branch.jsx","Component/Branch/Dialog.AddBranch.jsx","Pages/BranchPage.js"],"names":["useStyles","makeStyles","avatar","backgroundColor","blue","color","container","padding","minWidth","input","width","icon","footer","display","flexDirection","marginTop","justifyContent","AddCategoryDialog","props","onClose","refresh_list","open","parent","classes","useState","name","icon_class","state","setState","iconSrc","setIconSrc","bannerSrc","setBannerSrc","openIcon","setOpenIcon","src","aspect","dataIcon","setDataIcon","openBanner","setOpenBanner","dataBanner","setDataBanner","aria-labelledby","id","className","style","marginBottom","variant","placeholder","required","value","onChange","e","target","val","htmlFor","height","border","backgroundImage","backgroundSize","backgroundRepeat","type","file","files","url","URL","createObjectURL","onClick","post_data","BACK_END_URL","category_id","banner","then","res","catch","error","marginLeft","data","setPImage","url_image","EditCategoryDialog","useEffect","put_data","alert","EditBranchDialog","address","time_work","phone","email","description","handleChange","Dialog","DialogTitle","Divider","TextField","multiline","rows","Button","branch_id","table","margin","TableBranch","React","openDeleteDialog","setOpenDeleteDialog","itemDelete","setItemDelete","openEditDialog","setOpenEditDialog","dataEdit","setDataEdit","TableContainer","component","Box","Table","aria-label","TableHead","TableRow","TableCell","fontWeight","align","TableBody","map","row","key","IconButton","handleDelete","delete_data","AddBranchDialog","BranchPage","listBranch","setListBranch","openAddDialog","setOpenAddDialog","totalBranch","setTotalBranch","get_data","list_branch","total_branch","Typography"],"mappings":"oRAWMA,EAAYC,YAAW,CACzBC,OAAQ,CACJC,gBAAiBC,IAAK,KACtBC,MAAOD,IAAK,MAEhBE,UAAW,CACPC,QAAS,OACTC,SAAU,SAEdC,MAAO,CACHC,MAAO,QAEXC,KAAM,CACFD,MAAO,QAEXE,OAAQ,CACJC,QAAS,OACTC,cAAe,MACfC,UAAW,OACXC,eAAgB,cAGT,SAASC,EAAkBC,GAAQ,IACvCC,EAAuCD,EAAvCC,QAASC,EAA8BF,EAA9BE,aAAcC,EAAgBH,EAAhBG,KAAMC,EAAUJ,EAAVI,OAC9BC,EAAUvB,IAF6B,EAGnBwB,mBAAS,CAC/BC,KAAM,GACNC,WAAY,KAL6B,mBAGtCC,EAHsC,KAG/BC,EAH+B,OA6BfJ,mBAAS,MA7BM,mBA6BtCK,EA7BsC,KA6B7BC,EA7B6B,OA8BXN,mBAAS,MA9BE,mBA8BtCO,EA9BsC,KA8B3BC,EA9B2B,OA+BbR,oBAAS,GA/BI,mBA+BtCS,EA/BsC,KA+B5BC,EA/B4B,OAgCbV,mBAAS,CACrCC,KAAM,KACNU,IAAK,KACLC,OAAQ,IAnCiC,mBAgCtCC,EAhCsC,KAgC5BC,EAhC4B,OAoDTd,oBAAS,GApDA,mBAoDtCe,EApDsC,KAoD1BC,EApD0B,OAqDThB,mBAAS,CACzCC,KAAM,KACNU,IAAK,KACLC,OAAQ,MAxDiC,mBAqDtCK,EArDsC,KAqD1BC,EArD0B,KAwE7C,OACI,kBAAC,IAAD,CAAQC,kBAAgB,eAAetB,KAAMA,GACzC,kBAAC,IAAD,CAAauB,GAAK,gBAAlB,gBACA,yBAAKC,UAAWtB,EAAQjB,WACpB,kBAAC,IAAD,CAAYwC,MAAO,CAAC/B,UAAW,OAAQgC,aAAc,WAArD,sBACA,kBAAC,IAAD,CAAWC,QAAS,WAAYC,YAAa,gBAAiBC,UAAU,EAC7DzB,KAAK,OAAO0B,MAAOxB,EAAMF,KAAM2B,SAzDjC,SAACC,GAClB,IAAI5B,EAAO4B,EAAEC,OAAO7B,KAChB8B,EAAMF,EAAEC,OAAOH,MACnBvB,EAAS,eACFD,EADC,eAEHF,EAAO8B,MAoD8DV,UAAWtB,EAAQd,QACrF,wCACA,2BAAO+C,QAAS,mBAAhB,UACA,yBAAKV,MAAO,CACRpC,MAAO,MACP+C,OAAQ,MACRC,OAAQ7B,EAAU,OAAS,mBAC3Bd,UAAW,MACXgC,aAAc,MACdY,gBAAiB9B,EAAO,cAAUA,EAAV,KAAuB,OAC/C+B,eAAgB,UAChBC,iBAAkB,eAItB,2BAAOC,KAAK,OAAOlB,GAAG,kBAAkBE,MAAO,CAACjC,QAAS,QAASuC,SAxDrD,SAACC,GACtB,IAAMU,EAAOV,EAAEC,OAAOU,MAAM,GACxBC,EAAMC,IAAIC,gBAAgBJ,GAC9BzB,EAAY,CACRH,IAAK8B,EACL7B,OAAQ,IAEZF,GAAY,MAkDJ,0CACA,2BAAO4B,KAAK,OAAOlB,GAAG,oBAAoBE,MAAO,CAACjC,QAAS,QAASuC,SArCrD,SAACC,GACxB,IAAMU,EAAOV,EAAEC,OAAOU,MAAM,GACxBC,EAAMC,IAAIC,gBAAgBJ,GAC9BrB,EAAc,CACVP,IAAK8B,EACL7B,OAAQ,MAEZI,GAAc,MA+BN,2BAAOgB,QAAQ,qBAAf,UACA,yBAAKV,MAAO,CACRpC,MAAO,OACP+C,OAAQ,MACRC,OAAQ7B,EAAU,OAAS,mBAC3Bd,UAAW,MACX4C,gBAAiB5B,EAAS,cAAUA,EAAV,KAAyB,OACnD6B,eAAgB,UAChBC,iBAAkB,eAGtB,yBAAKhB,UAAWtB,EAAQX,QACpB,kBAAC,IAAD,CAAQoC,QAAS,YAAa3C,MAAO,UAAW+D,QApGtC,WACtBC,YAAUC,IAAc,sBAAuB,GAAI,CAC/C7C,KAAOE,EAAMF,KACb8C,YAAajD,EAAOsB,GACpB4B,OAASzC,EACTpB,KAAMkB,IACP,GACE4C,MAAK,SAAAC,GACFtD,IACAD,OAEHwD,OAAM,SAAAC,SAyFC,QACA,kBAAC,IAAD,CAAQ9B,MAAO,CAAC+B,WAAY,UAAWT,QAASjD,GAAhD,YAGR,kBAAC,IAAD,CAAa2D,KAAMzC,EAAUhB,KAAMY,EAAU8C,UAlE9B,SAAA1B,GACRA,EAAE5B,KAAb,IACI0B,EAAQE,EAAE2B,UACdlD,EAAWqB,IA+DgEhC,QAAW,WAAKe,GAAY,MACnG,kBAAC,IAAD,CAAa4C,KAAMrC,EAAYpB,KAAMkB,EAAYwC,UA9ChC,SAAA1B,GACVA,EAAE5B,KAAb,IACI0B,EAAQE,EAAE2B,UACdhD,EAAamB,IA2CoEhC,QAAW,WAAKqB,GAAc,S,iMCvIjHxC,EAAYC,YAAW,CACzBC,OAAQ,CACJC,gBAAiBC,IAAK,KACtBC,MAAOD,IAAK,MAEhBE,UAAW,CACPC,QAAS,OACTC,SAAU,SAEdC,MAAO,CACHC,MAAO,QAEXC,KAAM,CACFD,MAAO,QAEXE,OAAQ,CACJC,QAAS,OACTC,cAAe,MACfC,UAAW,OACXC,eAAgB,cAGT,SAASiE,EAAmB/D,GAAQ,IACxCC,EAA6CD,EAA7CC,QAASC,EAAoCF,EAApCE,aAAcC,EAAsBH,EAAtBG,KAAcyD,GAAQ5D,EAAhBI,OAAgBJ,EAAR4D,MACtCvD,EAAUvB,IAF8B,EAGpBwB,mBAAS,CAC/BC,KAAM,KAJoC,mBAGvCE,EAHuC,KAGhCC,EAHgC,KAM9CsD,qBAAU,WACNtD,EAAS,eACFD,EADC,CAEJF,KAAMqD,EAAKrD,QAEfK,EAAWgD,EAAKnE,MAChBqB,EAAa8C,EAAKN,UACnB,CAACM,IACJ,IAd8C,EAkChBtD,mBAAS,MAlCO,mBAkCvCK,EAlCuC,KAkC9BC,EAlC8B,OAmCZN,mBAAS,MAnCG,mBAmCvCO,EAnCuC,KAmC5BC,EAnC4B,OAoCdR,oBAAS,GApCK,mBAoCvCS,EApCuC,KAoC7BC,EApC6B,OAqCdV,mBAAS,CACrCC,KAAM,KACNU,IAAK,KACLC,OAAQ,IAxCkC,mBAqCvCC,EArCuC,KAqC7BC,EArC6B,OAyDVd,oBAAS,GAzDC,mBAyDvCe,EAzDuC,KAyD3BC,EAzD2B,OA0DVhB,mBAAS,CACzCC,KAAM,KACNU,IAAK,KACLC,OAAQ,MA7DkC,mBA0DvCK,EA1DuC,KA0D3BC,EA1D2B,KA6E9C,OACI,kBAAC,IAAD,CAAQC,kBAAgB,sBAAsBtB,KAAMA,GAChD,kBAAC,IAAD,qBACA,yBAAKwB,UAAWtB,EAAQjB,WACpB,kBAAC,IAAD,CAAYwC,MAAO,CAAC/B,UAAW,OAAQgC,aAAc,WAArD,sBACA,kBAAC,IAAD,CAAWC,QAAS,WAAYC,YAAa,gBAAiBC,UAAU,EAC7DzB,KAAK,OAAO0B,MAAOxB,EAAMF,KAAM2B,SAzDjC,SAACC,GAClB,IAAI5B,EAAO4B,EAAEC,OAAO7B,KAChB8B,EAAMF,EAAEC,OAAOH,MACnBvB,EAAS,eACFD,EADC,eAEHF,EAAO8B,MAoD8DV,UAAWtB,EAAQd,QACrF,wCACA,2BAAO+C,QAAS,mBAAhB,UACA,yBAAKV,MAAO,CACRpC,MAAO,MACP+C,OAAQ,MACRC,OAAQ7B,EAAU,OAAS,mBAC3Bd,UAAW,MACXgC,aAAc,MACdY,gBAAiB9B,EAAO,cAAUA,EAAV,KAAuB,OAC/C+B,eAAgB,UAChBC,iBAAkB,eAItB,2BAAOC,KAAK,OAAOlB,GAAG,kBAAkBE,MAAO,CAACjC,QAAS,QAASuC,SAxDrD,SAACC,GACtB,IAAMU,EAAOV,EAAEC,OAAOU,MAAM,GACxBC,EAAMC,IAAIC,gBAAgBJ,GAC9BzB,EAAY,CACRH,IAAK8B,EACL7B,OAAQ,IAEZF,GAAY,MAkDJ,0CACA,2BAAO4B,KAAK,OAAOlB,GAAG,oBAAoBE,MAAO,CAACjC,QAAS,QAASuC,SArCrD,SAACC,GACxB,IAAMU,EAAOV,EAAEC,OAAOU,MAAM,GACxBC,EAAMC,IAAIC,gBAAgBJ,GAC9BrB,EAAc,CACVP,IAAK8B,EACL7B,OAAQ,MAEZI,GAAc,MA+BN,2BAAOgB,QAAQ,qBAAf,UACA,yBAAKV,MAAO,CACRpC,MAAO,OACP+C,OAAQ,MACRC,OAAQ7B,EAAU,OAAS,mBAC3Bd,UAAW,MACX4C,gBAAiB5B,EAAS,cAAUA,EAAV,KAAyB,OACnD6B,eAAgB,UAChBC,iBAAkB,eAGtB,yBAAKhB,UAAWtB,EAAQX,QACpB,kBAAC,IAAD,CAAQoC,QAAS,YAAa3C,MAAO,UAAW+D,QAnGrC,WACvBe,YAASb,IAAY,8BAA0BQ,EAAKlC,IAAM,GAAI,CAC1DnB,KAAME,EAAMF,KACZd,KAAMkB,EACN2C,OAAQzC,IACT,GACE0C,MAAK,SAAAC,GACFtD,IACAD,OAEHwD,OAAM,SAAAC,GAAK,OAAIQ,MAAM,iCAyFd,QACA,kBAAC,IAAD,CAAQtC,MAAO,CAAC+B,WAAY,UAAWT,QAASjD,GAAhD,YAGR,kBAAC,IAAD,CAAa2D,KAAMzC,EAAUhB,KAAMY,EAAU8C,UAlE9B,SAAA1B,GACRA,EAAE5B,KAAb,IACI0B,EAAQE,EAAE2B,UACdlD,EAAWqB,IA+DgEhC,QAAW,WAAKe,GAAY,MACnG,kBAAC,IAAD,CAAa4C,KAAMrC,EAAYpB,KAAMkB,EAAYwC,UA9ChC,SAAA1B,GACVA,EAAE5B,KAAb,IACI0B,EAAQE,EAAE2B,UACdhD,EAAamB,IA2CoEhC,QAAW,WAAKqB,GAAc,S,kVC7IjHxC,EAAYC,YAAW,CACzBC,OAAQ,CACJC,gBAAiBC,IAAK,KACtBC,MAAOD,IAAK,MAEhBE,UAAW,CACPC,QAAS,OACTC,SAAU,QACV,MAAO,CACHO,UAAW,SAGnBN,MAAO,CACHC,MAAO,QAEXC,KAAM,CACFD,MAAO,QAEXE,OAAQ,CACJC,QAAS,OACTC,cAAe,MACfC,UAAW,OACXC,eAAgB,cAGT,SAASqE,EAAiBnE,GAAQ,IACtCC,EAAqCD,EAArCC,QAASC,EAA4BF,EAA5BE,aAAcC,EAAcH,EAAdG,KAAMyD,EAAQ5D,EAAR4D,KAC9BvD,EAAUvB,IAF4B,EAGlBwB,mBAAS,CAC/BC,KAAM,KACN6D,QAAS,KACTC,UAAW,KACXC,MAAO,KACPC,MAAO,KACPC,YAAa,OAT2B,mBAGrC/D,EAHqC,KAG9BC,EAH8B,KAW5CsD,qBAAU,WACNtD,EAAS,CACLH,KAAMqD,EAAKrD,KACX6D,QAASR,EAAKQ,QACdC,UAAWT,EAAKS,UAChBC,MAAOV,EAAKU,MACZC,MAAOX,EAAKW,MACZC,YAAaZ,EAAKY,gBAEvB,CAACZ,IAEJ,IAeMa,EAAe,SAACtC,GAClB,IAAI5B,EAAO4B,EAAEC,OAAO7B,KAChB8B,EAAMF,EAAEC,OAAOH,MACnBvB,EAAS,eACFD,EADC,eAEHF,EAAO8B,MAGhB,OACI,kBAACqC,EAAA,EAAD,CAAQjD,kBAAgB,cAActB,KAAMA,GACxC,kBAACwE,EAAA,EAAD,CAAajD,GAAK,eAAlB,cACA,kBAACkD,EAAA,EAAD,CAAS9C,QAAS,WAClB,yBAAKH,UAAWtB,EAAQjB,WACpB,kBAACyF,EAAA,EAAD,CAAW/C,QAAS,WAAYC,YAAa,OAAQC,UAAU,EACpDzB,KAAK,OAAO0B,MAAOxB,EAAMF,KAAM2B,SAAUuC,EAAc9C,UAAWtB,EAAQd,QACrF,kBAACsF,EAAA,EAAD,CAAW/C,QAAS,WAAYC,YAAa,UAAWC,UAAU,EACvDzB,KAAK,UAAU0B,MAAOxB,EAAM2D,QAASlC,SAAUuC,EAC/C9C,UAAWtB,EAAQd,QAC9B,kBAACsF,EAAA,EAAD,CAAW/C,QAAS,WAAYC,YAAa,YAAaC,UAAU,EACzDzB,KAAK,YAAY0B,MAAOxB,EAAM4D,UAAWnC,SAAUuC,EACnD9C,UAAWtB,EAAQd,QAC9B,kBAACsF,EAAA,EAAD,CAAW/C,QAAS,WAAYC,YAAa,QAASC,UAAU,EACrDzB,KAAK,QAAQ0B,MAAOxB,EAAM6D,MAAOpC,SAAUuC,EAC3C9C,UAAWtB,EAAQd,QAC9B,kBAACsF,EAAA,EAAD,CAAW/C,QAAS,WAAYC,YAAa,QAASC,UAAU,EACrDzB,KAAK,QAAQ0B,MAAOxB,EAAM8D,MAAOrC,SAAUuC,EAC3C9C,UAAWtB,EAAQd,QAC9B,kBAACsF,EAAA,EAAD,CAAW/C,QAAS,WAAYC,YAAa,cAAeC,UAAU,EAAM8C,WAAW,EAAMC,KAAM,EACxFxE,KAAK,cAAc0B,MAAOxB,EAAM+D,YAAatC,SAAUuC,EACvD9C,UAAWtB,EAAQd,QAC9B,yBAAKoC,UAAWtB,EAAQX,QACpB,kBAACsF,EAAA,EAAD,CAAQlD,QAAS,YAAa3C,MAAO,UAAW+D,QA9CtC,WACtBe,YAASb,IAAY,wBAAoBQ,EAAKqB,WAAa,GAAI,CAC3D1E,KAAME,EAAMF,KACZ6D,QAAS3D,EAAM2D,QACfC,UAAW5D,EAAM4D,UACjBC,MAAO7D,EAAM6D,MACbC,MAAO9D,EAAM8D,MACbC,YAAa/D,EAAM+D,cACpB,GACEjB,MAAK,SAAAC,GACFtD,IACAD,OAEHwD,OAAM,SAAAC,GAAK,OAAIQ,MAAM,gDAiCd,QACA,kBAACc,EAAA,EAAD,CAAQpD,MAAO,CAAC+B,WAAY,UAAWT,QAASjD,GAAhD,aClFpB,IAAMnB,EAAYC,YAAW,CACzBmG,MAAO,CACH5F,SAAU,IACV6F,OAAQ,eAKD,SAASC,EAAT,GAAoD,IAA9BxB,EAA6B,EAA7BA,KAAM1D,EAAuB,EAAvBA,aAAcE,EAAS,EAATA,OAC/CC,EAAUvB,IAD8C,EASduG,IAAM/E,UAAS,GATD,mBASvDgF,EATuD,KASrCC,EATqC,OAU1BF,IAAM/E,SAAS,GAVW,mBAUvDkF,EAVuD,KAU3CC,EAV2C,OAWlBJ,IAAM/E,UAAS,GAXG,mBAWvDoF,EAXuD,KAWvCC,EAXuC,OAY9BN,IAAM/E,SAAS,IAZe,mBAYvDsF,EAZuD,KAY7CC,EAZ6C,KAa9D,OACI,kBAACC,EAAA,EAAD,CAAgBC,UAAWC,KACvB,kBAACC,EAAA,EAAD,CAAOtE,UAAWtB,EAAQ6E,MAAOgB,aAAW,gBACxC,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWzE,MAAO,CAAC0E,WAAY,SAA/B,MACA,kBAACD,EAAA,EAAD,CAAWzE,MAAO,CAAC0E,WAAY,SAA/B,QACA,kBAACD,EAAA,EAAD,CAAWzE,MAAO,CAAC0E,WAAY,SAA/B,SACA,kBAACD,EAAA,EAAD,CAAWzE,MAAO,CAAC0E,WAAY,SAA/B,SACA,kBAACD,EAAA,EAAD,CAAWzE,MAAO,CAAC0E,WAAY,SAA/B,WACA,kBAACD,EAAA,EAAD,CAAWE,MAAO,SAAU3E,MAAO,CACnC0E,WAAY,SADZ,YAKR,kBAACE,EAAA,EAAD,KACK5C,EAAK6C,KAAI,SAACC,GAAD,OACN,kBAACN,EAAA,EAAD,CAAUO,IAAKD,EAAIzB,WACf,kBAACoB,EAAA,EAAD,KAAYK,EAAIzB,WAChB,kBAACoB,EAAA,EAAD,KACKK,EAAInG,MAET,kBAAC8F,EAAA,EAAD,KAAYK,EAAInC,OAChB,kBAAC8B,EAAA,EAAD,KAAYK,EAAIpC,OAChB,kBAAC+B,EAAA,EAAD,KAAYK,EAAItC,SAChB,kBAACiC,EAAA,EAAD,CAAWE,MAAM,UACb,yBAAK3E,MAAO,CAACjC,QAAS,OAAQC,cAAe,MAAOE,eAAgB,WAChE,kBAAC8G,EAAA,EAAD,CAAYhF,MAAO,CAACzC,MAAO,WAAY+D,QAAS,SAACf,GAC7CwD,GAAkB,GAClBE,EAAYa,KAEZ,kBAAC,IAAD,OAEJ,kBAACE,EAAA,EAAD,CAAYhF,MAAO,CAACzC,MAAO,WAAY+D,QAAS,SAACf,GAC7CoD,GAAoB,GACpBE,EAAciB,EAAIzB,aAElB,kBAAC,IAAD,eAQ5B,kBAAC,IAAD,CAAc9E,KAAMmF,EAAkBrF,QAAS,kBAAMsF,GAAoB,IAC3DsB,aAzDD,WACjB,IAAI5B,EAAYO,EAChBD,GAAoB,GACpBuB,YAAY1D,IAAY,wBAAoB6B,GAAa,IAAI,GACxD1B,MAAK,SAAAC,GAAG,OAAItD,OACZuD,OAAM,SAAAC,GAAK,OAAIQ,MAAM,4GAqDtB,kBAACC,EAAD,CAAkBhE,KAAMuF,EAAgBzF,QAAS,kBAAM0F,GAAkB,IAClDzF,aAAcA,EAAcE,OAAQA,EAAQwD,KAAMgC,O,yLCjF/E9G,EAAYC,YAAW,CACzBC,OAAQ,CACJC,gBAAiBC,IAAK,KACtBC,MAAOD,IAAK,MAEhBE,UAAW,CACPC,QAAS,OACTC,SAAU,QACV,MAAQ,CACJO,UAAY,SAGpBN,MAAO,CACHC,MAAO,QAEXC,KAAM,CACFD,MAAO,QAEXE,OAAQ,CACJC,QAAS,OACTC,cAAe,MACfC,UAAW,OACXC,eAAgB,cAGT,SAASiH,EAAgB/G,GAAQ,IACrCC,EAA+BD,EAA/BC,QAASC,EAAsBF,EAAtBE,aAAcC,EAAQH,EAARG,KACxBE,EAAUvB,IAF2B,EAGjBwB,mBAAS,CAC/BC,KAAM,KACN6D,QAAS,KACTC,UAAW,KACXC,MAAO,KACPC,MAAO,KACPC,YAAa,OAT0B,mBAGpC/D,EAHoC,KAG7BC,EAH6B,KA2BrC+D,EAAe,SAACtC,GAClB,IAAI5B,EAAO4B,EAAEC,OAAO7B,KAChB8B,EAAMF,EAAEC,OAAOH,MACnBvB,EAAS,eACFD,EADC,eAEHF,EAAO8B,MAGhB,OACI,kBAACqC,EAAA,EAAD,CAAQjD,kBAAgB,aAAatB,KAAMA,GACvC,kBAACwE,EAAA,EAAD,CAAajD,GAAK,cAAlB,cACA,kBAACkD,EAAA,EAAD,CAAS9C,QAAS,WAClB,yBAAKH,UAAWtB,EAAQjB,WACpB,kBAACyF,EAAA,EAAD,CAAW/C,QAAS,WAAYC,YAAa,OAAQC,UAAU,EACpDzB,KAAK,OAAO0B,MAAOxB,EAAMF,KAAM2B,SAAUuC,EAAc9C,UAAWtB,EAAQd,QACrF,kBAACsF,EAAA,EAAD,CAAW/C,QAAS,WAAYC,YAAa,UAAWC,UAAU,EACvDzB,KAAK,UAAU0B,MAAOxB,EAAM2D,QAASlC,SAAUuC,EAAc9C,UAAWtB,EAAQd,QAC3F,kBAACsF,EAAA,EAAD,CAAW/C,QAAS,WAAYC,YAAa,YAAaC,UAAU,EACzDzB,KAAK,YAAY0B,MAAOxB,EAAM4D,UAAWnC,SAAUuC,EAAc9C,UAAWtB,EAAQd,QAC/F,kBAACsF,EAAA,EAAD,CAAW/C,QAAS,WAAYC,YAAa,QAASC,UAAU,EACrDzB,KAAK,QAAQ0B,MAAOxB,EAAM6D,MAAOpC,SAAUuC,EAAc9C,UAAWtB,EAAQd,QACvF,kBAACsF,EAAA,EAAD,CAAW/C,QAAS,WAAYC,YAAa,QAASC,UAAU,EACrDzB,KAAK,QAAQ0B,MAAOxB,EAAM8D,MAAOrC,SAAUuC,EAAc9C,UAAWtB,EAAQd,QACvF,kBAACsF,EAAA,EAAD,CAAW/C,QAAS,WAAYC,YAAa,cAAeC,UAAU,EAAM8C,WAAW,EAAMC,KAAM,EACxFxE,KAAK,cAAc0B,MAAOxB,EAAM+D,YAAatC,SAAUuC,EAAc9C,UAAWtB,EAAQd,QACnG,yBAAKoC,UAAWtB,EAAQX,QACpB,kBAACsF,EAAA,EAAD,CAAQlD,QAAS,YAAa3C,MAAO,UAAW+D,QAzCtC,WACtBC,YAAUC,IAAe,gBAAiB,GAAI,CAC1C7C,KAAME,EAAMF,KACZ6D,QAAS3D,EAAM2D,QACfC,UAAW5D,EAAM4D,UACjBC,MAAO7D,EAAM6D,MACbC,MAAO9D,EAAM8D,MACbC,YAAa/D,EAAM+D,cACpB,GACEjB,MAAK,SAAAC,GACFtD,IACAD,OAEHwD,OAAM,SAAAC,GAAK,OAAIQ,MAAM,6CA4Bd,QACA,kBAACc,EAAA,EAAD,CAAQpD,MAAO,CAAC+B,WAAY,UAAWT,QAASjD,GAAhD,a,aCjDL+G,UAjCI,WAAO,IAAD,EACe3B,IAAM/E,SAAS,IAD9B,mBACd2G,EADc,KACFC,EADE,OAEqB7B,IAAM/E,UAAS,GAFpC,mBAEd6G,EAFc,KAECC,EAFD,OAGiB/B,IAAM/E,SAAS,GAHhC,mBAGd+G,EAHc,KAGDC,EAHC,KAIrBjC,IAAMrB,WAAU,WACZuD,YAASnE,IAAe,iBAAkB,IAAI,GACzCG,MAAK,SAAAC,GACF0D,EAAc1D,EAAII,KAAK4D,aACvBF,EAAe9D,EAAII,KAAK6D,mBAEjC,IACH,IAAMvH,EAAe,WAChBqH,YAASnE,IAAe,iBAAkB,IAAI,GAC1CG,MAAK,SAAAC,GACF0D,EAAc1D,EAAII,KAAK4D,aACvBF,EAAe9D,EAAII,KAAK6D,kBAGpC,OACI,yBAAK7F,MAAO,CAACvC,QAAS,SAClB,kBAACqI,EAAA,EAAD,CAAY5F,QAAS,MAArB,kBAAuCuF,EAAvC,MACA,yBAAKzF,MAAO,CAACjC,QAAS,OAAQC,cAAgB,MAAQC,UAAW,SAC7D,kBAACmF,EAAA,EAAD,CAAQlD,QAAS,YAAa3C,MAAO,UAAWyC,MAAO,CAACW,OAAS,QACjEW,QAAS,WAAKkE,GAAiB,KAC3B,kBAAC,IAAD,MAFJ,eAKJ,kBAAC,IAAD,CAAaxD,KAAQqD,EAAY/G,aAAgBA,IACjD,kBAAC6G,EAAD,CAAiB5G,KAAQgH,EAAelH,QAAW,kBAAImH,GAAiB,IAAQlH,aAAgBA","file":"static/js/9.e3ef0442.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport {blue} from '@material-ui/core/colors';\nimport {TextField, Typography, Button} from \"@material-ui/core\";\nimport HelpIcon from '@material-ui/icons/Help';\nimport {post_data} from \"../../ApiCall\";\nimport {BACK_END_URL} from \"../../ServiceURL\";\nimport ImageDialog from \"../ImageDialog\";\n\nconst useStyles = makeStyles({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    container: {\n        padding: '1rem',\n        minWidth: '500px'\n    },\n    input: {\n        width: '100%'\n    },\n    icon: {\n        width: '100%'\n    },\n    footer: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginTop: '1rem',\n        justifyContent: 'flex-end'\n    }\n});\nexport default function AddCategoryDialog(props) {\n    const {onClose, refresh_list, open, parent} = props;\n    const classes = useStyles();\n    const [state, setState] = useState({\n        name: '',\n        icon_class: ''\n    })\n\n    const handleAddCategory = () => {\n        post_data(BACK_END_URL +'/admin/sub_category', {}, {\n            name : state.name,\n            category_id: parent.id,\n            banner : bannerSrc,\n            icon: iconSrc\n        }, true)\n            .then(res => {\n                refresh_list()\n                onClose()\n            })\n            .catch(error => {})\n    };\n    const handleChange = (e) => {\n        let name = e.target.name\n        let val = e.target.value\n        setState({\n            ...state,\n            [name]: val\n        })\n    }\n    const [iconSrc, setIconSrc] = useState(null)\n    const [bannerSrc, setBannerSrc] = useState(null)\n    const [openIcon, setOpenIcon] = useState(false)\n    const [dataIcon, setDataIcon] = useState({\n        name: null,\n        src: null,\n        aspect: 1/1,\n    })\n    const handleIconChange = (e) => {\n        const file = e.target.files[0]\n        let url = URL.createObjectURL(file)\n        setDataIcon({\n            src: url,\n            aspect: 1/1\n        })\n        setOpenIcon(true)\n    }\n    const handleSetIcon = (e => {\n        let name = e.name\n        let value = e.url_image\n        setIconSrc(value)\n    })\n\n    const [openBanner, setOpenBanner] = useState(false)\n    const [dataBanner, setDataBanner] = useState({\n        name: null,\n        src: null,\n        aspect: 3.5/1,\n    })\n    const handleBannerChange = (e) => {\n        const file = e.target.files[0]\n        let url = URL.createObjectURL(file)\n        setDataBanner({\n            src: url,\n            aspect: 3.5/1\n        })\n        setOpenBanner(true)\n    }\n    const handleSetBanner = (e => {\n        let name = e.name\n        let value = e.url_image\n        setBannerSrc(value)\n    })\n    return (\n        <Dialog aria-labelledby=\"add-category\" open={open}>\n            <DialogTitle id = \"add-category\">Add Category</DialogTitle>\n            <div className={classes.container}>\n                <Typography style={{marginTop: '1rem', marginBottom: '0.5rem'}}>Name sub-category:</Typography>\n                <TextField variant={'outlined'} placeholder={'Name Category'} required={true}\n                           name='name' value={state.name} onChange={handleChange} className={classes.input}></TextField>\n                <span>Icon: </span>\n                <label htmlFor={'input-icon-pcat'}>Upload</label>\n                <div style={{\n                    width: '3em',\n                    height: '3em',\n                    border: iconSrc ? 'none' : '1px dashed black',\n                    marginTop: '1em',\n                    marginBottom: '1em',\n                    backgroundImage: iconSrc ? `url(${iconSrc})` : 'none',\n                    backgroundSize: 'contain',\n                    backgroundRepeat: 'no-repeat'\n                }}>\n\n                </div>\n                <input type='file' id=\"input-icon-pcat\" style={{display: \"none\"}} onChange={handleIconChange}/>\n                <span>Banner: </span>\n                <input type='file' id='input-banner-pcat' style={{display: \"none\"}} onChange={handleBannerChange}/>\n                <label htmlFor='input-banner-pcat'>Upload</label>\n                <div style={{\n                    width: '100%',\n                    height: '9em',\n                    border: iconSrc ? 'none' : '1px dashed black',\n                    marginTop: '1em',\n                    backgroundImage: bannerSrc ? `url(${bannerSrc})` : 'none',\n                    backgroundSize: 'contain',\n                    backgroundRepeat: 'no-repeat'\n                }}>\n                </div>\n                <div className={classes.footer}>\n                    <Button variant={'contained'} color={'primary'} onClick={handleAddCategory}>Save</Button>\n                    <Button style={{marginLeft: '0.5rem'}} onClick={onClose}>Cancel</Button>\n                </div>\n            </div>\n            <ImageDialog data={dataIcon} open={openIcon} setPImage={handleSetIcon} onClose = {()=>{setOpenIcon(false)}} />\n            <ImageDialog data={dataBanner} open={openBanner} setPImage={handleSetBanner} onClose = {()=>{setOpenBanner(false)}} />\n        </Dialog>\n    );\n}","import React, {useEffect, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport {blue} from '@material-ui/core/colors';\nimport {TextField, Typography, Button} from \"@material-ui/core\";\nimport HelpIcon from '@material-ui/icons/Help';\nimport {post_data, put_data} from \"../../ApiCall\";\nimport {BACK_END_URL} from \"../../ServiceURL\";\nimport ImageDialog from \"../ImageDialog\";\n\nconst useStyles = makeStyles({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    container: {\n        padding: '1rem',\n        minWidth: '500px'\n    },\n    input: {\n        width: '100%'\n    },\n    icon: {\n        width: '100%'\n    },\n    footer: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginTop: '1rem',\n        justifyContent: 'flex-end'\n    }\n});\nexport default function EditCategoryDialog(props) {\n    const {onClose, refresh_list, open, parent, data} = props;\n    const classes = useStyles();\n    const [state, setState] = useState({\n        name: '',\n    })\n    useEffect(() => {\n        setState({\n            ...state,\n            name: data.name\n        })\n        setIconSrc(data.icon)\n        setBannerSrc(data.banner)\n    }, [data])\n    const handleEditCategory = () => {\n        put_data(BACK_END_URL + `/admin/sub_category/${data.id}`, {}, {\n            name: state.name,\n            icon: iconSrc,\n            banner: bannerSrc\n        }, true)\n            .then(res => {\n                refresh_list()\n                onClose()\n            })\n            .catch(error => alert('Error when edit category'))\n    };\n    const handleChange = (e) => {\n        let name = e.target.name\n        let val = e.target.value\n        setState({\n            ...state,\n            [name]: val\n        })\n    }\n    const [iconSrc, setIconSrc] = useState(null)\n    const [bannerSrc, setBannerSrc] = useState(null)\n    const [openIcon, setOpenIcon] = useState(false)\n    const [dataIcon, setDataIcon] = useState({\n        name: null,\n        src: null,\n        aspect: 1/1,\n    })\n    const handleIconChange = (e) => {\n        const file = e.target.files[0]\n        let url = URL.createObjectURL(file)\n        setDataIcon({\n            src: url,\n            aspect: 1/1\n        })\n        setOpenIcon(true)\n    }\n    const handleSetIcon = (e => {\n        let name = e.name\n        let value = e.url_image\n        setIconSrc(value)\n    })\n\n    const [openBanner, setOpenBanner] = useState(false)\n    const [dataBanner, setDataBanner] = useState({\n        name: null,\n        src: null,\n        aspect: 3.5/1,\n    })\n    const handleBannerChange = (e) => {\n        const file = e.target.files[0]\n        let url = URL.createObjectURL(file)\n        setDataBanner({\n            src: url,\n            aspect: 3.5/1\n        })\n        setOpenBanner(true)\n    }\n    const handleSetBanner = (e => {\n        let name = e.name\n        let value = e.url_image\n        setBannerSrc(value)\n    })\n    return (\n        <Dialog aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogTitle>Add Category</DialogTitle>\n            <div className={classes.container}>\n                <Typography style={{marginTop: '1rem', marginBottom: '0.5rem'}}>Name sub-category:</Typography>\n                <TextField variant={'outlined'} placeholder={'Name Category'} required={true}\n                           name='name' value={state.name} onChange={handleChange} className={classes.input}></TextField>\n                <span>Icon: </span>\n                <label htmlFor={'input-icon-pcat'}>Upload</label>\n                <div style={{\n                    width: '3em',\n                    height: '3em',\n                    border: iconSrc ? 'none' : '1px dashed black',\n                    marginTop: '1em',\n                    marginBottom: '1em',\n                    backgroundImage: iconSrc ? `url(${iconSrc})` : 'none',\n                    backgroundSize: 'contain',\n                    backgroundRepeat: 'no-repeat'\n                }}>\n\n                </div>\n                <input type='file' id=\"input-icon-pcat\" style={{display: \"none\"}} onChange={handleIconChange}/>\n                <span>Banner: </span>\n                <input type='file' id='input-banner-pcat' style={{display: \"none\"}} onChange={handleBannerChange}/>\n                <label htmlFor='input-banner-pcat'>Upload</label>\n                <div style={{\n                    width: '100%',\n                    height: '9em',\n                    border: iconSrc ? 'none' : '1px dashed black',\n                    marginTop: '1em',\n                    backgroundImage: bannerSrc ? `url(${bannerSrc})` : 'none',\n                    backgroundSize: 'contain',\n                    backgroundRepeat: 'no-repeat'\n                }}>\n                </div>\n                <div className={classes.footer}>\n                    <Button variant={'contained'} color={'primary'} onClick={handleEditCategory}>Save</Button>\n                    <Button style={{marginLeft: '0.5rem'}} onClick={onClose}>Cancel</Button>\n                </div>\n            </div>\n            <ImageDialog data={dataIcon} open={openIcon} setPImage={handleSetIcon} onClose = {()=>{setOpenIcon(false)}} />\n            <ImageDialog data={dataBanner} open={openBanner} setPImage={handleSetBanner} onClose = {()=>{setOpenBanner(false)}} />\n        </Dialog>\n    );\n}","import React, {useEffect, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport {blue} from '@material-ui/core/colors';\nimport {TextField, Divider, Button} from \"@material-ui/core\";\nimport HelpIcon from '@material-ui/icons/Help';\nimport {post_data, put_data} from \"../../ApiCall\";\nimport {BACK_END_URL} from \"../../ServiceURL\";\n\nconst useStyles = makeStyles({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    container: {\n        padding: '1rem',\n        minWidth: '500px',\n        '&>*': {\n            marginTop: '1rem'\n        }\n    },\n    input: {\n        width: '100%'\n    },\n    icon: {\n        width: '100%'\n    },\n    footer: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginTop: '1rem',\n        justifyContent: 'flex-end'\n    }\n});\nexport default function EditBranchDialog(props) {\n    const {onClose, refresh_list, open, data} = props;\n    const classes = useStyles();\n    const [state, setState] = useState({\n        name: null,\n        address: null,\n        time_work: null,\n        phone: null,\n        email: null,\n        description: null\n    })\n    useEffect(() => {\n        setState({\n            name: data.name,\n            address: data.address,\n            time_work: data.time_work,\n            phone: data.phone,\n            email: data.email,\n            description: data.description\n        })\n    }, [data])\n\n    const handleAddCategory = () => {\n        put_data(BACK_END_URL + `/admin/branch/${data.branch_id}`, {}, {\n            name: state.name,\n            address: state.address,\n            time_work: state.time_work,\n            phone: state.phone,\n            email: state.email,\n            description: state.description\n        }, true)\n            .then(res => {\n                refresh_list()\n                onClose()\n            })\n            .catch(error => alert('Error when edit branch. Try again later'))\n    };\n    const handleChange = (e) => {\n        let name = e.target.name\n        let val = e.target.value\n        setState({\n            ...state,\n            [name]: val\n        })\n    }\n    return (\n        <Dialog aria-labelledby=\"edit-branch\" open={open}>\n            <DialogTitle id = \"edit-branch\">Add Branch</DialogTitle>\n            <Divider variant={'middle'}/>\n            <div className={classes.container}>\n                <TextField variant={'outlined'} placeholder={'Name'} required={true}\n                           name='name' value={state.name} onChange={handleChange} className={classes.input}></TextField>\n                <TextField variant={'outlined'} placeholder={'Address'} required={true}\n                           name='address' value={state.address} onChange={handleChange}\n                           className={classes.input}></TextField>\n                <TextField variant={'outlined'} placeholder={'Time Work'} required={true}\n                           name='time_work' value={state.time_work} onChange={handleChange}\n                           className={classes.input}></TextField>\n                <TextField variant={'outlined'} placeholder={'Phone'} required={true}\n                           name='phone' value={state.phone} onChange={handleChange}\n                           className={classes.input}></TextField>\n                <TextField variant={'outlined'} placeholder={'Email'} required={true}\n                           name='email' value={state.email} onChange={handleChange}\n                           className={classes.input}></TextField>\n                <TextField variant={'outlined'} placeholder={'Description'} required={true} multiline={true} rows={3}\n                           name='description' value={state.description} onChange={handleChange}\n                           className={classes.input}></TextField>\n                <div className={classes.footer}>\n                    <Button variant={'contained'} color={'primary'} onClick={handleAddCategory}>Save</Button>\n                    <Button style={{marginLeft: '0.5rem'}} onClick={onClose}>Cancel</Button>\n                </div>\n            </div>\n        </Dialog>\n    );\n}","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Box, IconButton} from \"@material-ui/core\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport RestoreFromTrashIcon from '@material-ui/icons/RestoreFromTrash';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '@fortawesome/fontawesome-free/js/all'\nimport {delete_data} from \"../../ApiCall\";\nimport {BACK_END_URL} from \"../../ServiceURL\";\nimport {Dialog, DialogTitle, Typography} from '@material-ui/core'\nimport DeleteDialog from \"../Dialog.Delete\";\nimport EditDialogCategory from \"../ParentCategory/Dialog.EditParCategory\";\nimport AddSubCategoryDialog from \"../Category/Dialog.AddCategory\";\nimport EditSubCategoryDialog from \"../Category/Dialog.EditCategory\";\nimport EditBranchDialog from \"./Dialog.EditBranch\";\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 500,\n        margin: \"3rem auto\",\n    },\n});\n\n\nexport default function TableBranch({data, refresh_list, parent}) {\n    const classes = useStyles();\n    const deleteBranch = () => {\n        let branch_id = itemDelete\n        setOpenDeleteDialog(false)\n        delete_data(BACK_END_URL + `/admin/branch/${branch_id}`, {}, true)\n            .then(res => refresh_list())\n            .catch(error => alert('Error while delete! Please make sure sub_category is None and list product of sub_category is None'))\n    }\n    const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n    const [itemDelete, setItemDelete] = React.useState(0)\n    const [openEditDialog, setOpenEditDialog] = React.useState(false)\n    const [dataEdit, setDataEdit] = React.useState({})\n    return (\n        <TableContainer component={Box}>\n            <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell style={{fontWeight: \"bold\"}}>Id</TableCell>\n                        <TableCell style={{fontWeight: \"bold\"}}>Name</TableCell>\n                        <TableCell style={{fontWeight: \"bold\"}}>Email</TableCell>\n                        <TableCell style={{fontWeight: \"bold\"}}>Phone</TableCell>\n                        <TableCell style={{fontWeight: \"bold\"}}>Address</TableCell>\n                        <TableCell align={\"center\"} style={{\n                        fontWeight: \"bold\",\n                    }}>Action</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {data.map((row) => (\n                        <TableRow key={row.branch_id}>\n                            <TableCell>{row.branch_id}</TableCell>\n                            <TableCell>\n                                {row.name}\n                            </TableCell>\n                            <TableCell>{row.email}</TableCell>\n                            <TableCell>{row.phone}</TableCell>\n                            <TableCell>{row.address}</TableCell>\n                            <TableCell align=\"center\">\n                                <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: 'center'}}>\n                                    <IconButton style={{color: '#4caf50'}} onClick={(e) => {\n                                        setOpenEditDialog(true)\n                                        setDataEdit(row)\n                                    }}>\n                                        <EditIcon/>\n                                    </IconButton>\n                                    <IconButton style={{color: '#e91e63'}} onClick={(e) => {\n                                        setOpenDeleteDialog(true)\n                                        setItemDelete(row.branch_id)\n                                    }}>\n                                        <RestoreFromTrashIcon/>\n                                    </IconButton>\n                                </div>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n            <DeleteDialog open={openDeleteDialog} onClose={() => setOpenDeleteDialog(false)}\n                          handleDelete={deleteBranch}/>\n            <EditBranchDialog open={openEditDialog} onClose={() => setOpenEditDialog(false)}\n                                   refresh_list={refresh_list} parent={parent} data={dataEdit}/>\n        </TableContainer>\n    );\n}","import React, {useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport {blue} from '@material-ui/core/colors';\nimport {TextField, Divider, Button} from \"@material-ui/core\";\nimport HelpIcon from '@material-ui/icons/Help';\nimport {post_data} from \"../../ApiCall\";\nimport {BACK_END_URL} from \"../../ServiceURL\";\n\nconst useStyles = makeStyles({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    container: {\n        padding: '1rem',\n        minWidth: '500px',\n        '&>*' : {\n            marginTop : '1rem'\n        }\n    },\n    input: {\n        width: '100%'\n    },\n    icon: {\n        width: '100%'\n    },\n    footer: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginTop: '1rem',\n        justifyContent: 'flex-end'\n    }\n});\nexport default function AddBranchDialog(props) {\n    const {onClose, refresh_list, open} = props;\n    const classes = useStyles();\n    const [state, setState] = useState({\n        name: null,\n        address: null,\n        time_work: null,\n        phone: null,\n        email: null,\n        description: null\n    })\n\n    const handleAddCategory = () => {\n        post_data(BACK_END_URL + '/admin/branch', {}, {\n            name: state.name,\n            address: state.address,\n            time_work: state.time_work,\n            phone: state.phone,\n            email: state.email,\n            description: state.description\n        }, true)\n            .then(res => {\n                refresh_list()\n                onClose()\n            })\n            .catch(error => alert(\"Fail when add data. Please try again\"))\n    };\n    const handleChange = (e) => {\n        let name = e.target.name\n        let val = e.target.value\n        setState({\n            ...state,\n            [name]: val\n        })\n    }\n    return (\n        <Dialog aria-labelledby=\"add_branch\" open={open}>\n            <DialogTitle id = \"add_branch\">Add Branch</DialogTitle>\n            <Divider variant={'middle'}/>\n            <div className={classes.container}>\n                <TextField variant={'outlined'} placeholder={'Name'} required={true}\n                           name='name' value={state.name} onChange={handleChange} className={classes.input}></TextField>\n                <TextField variant={'outlined'} placeholder={'Address'} required={true}\n                           name='address' value={state.address} onChange={handleChange} className={classes.input}></TextField>\n                <TextField variant={'outlined'} placeholder={'Time Work'} required={true}\n                           name='time_work' value={state.time_work} onChange={handleChange} className={classes.input}></TextField>\n                <TextField variant={'outlined'} placeholder={'Phone'} required={true}\n                           name='phone' value={state.phone} onChange={handleChange} className={classes.input}></TextField>\n                <TextField variant={'outlined'} placeholder={'Email'} required={true}\n                           name='email' value={state.email} onChange={handleChange} className={classes.input}></TextField>\n                <TextField variant={'outlined'} placeholder={'Description'} required={true} multiline={true} rows={3}\n                           name='description' value={state.description} onChange={handleChange} className={classes.input}></TextField>\n                <div className={classes.footer}>\n                    <Button variant={'contained'} color={'primary'} onClick={handleAddCategory}>Save</Button>\n                    <Button style={{marginLeft: '0.5rem'}} onClick={onClose}>Cancel</Button>\n                </div>\n            </div>\n        </Dialog>\n    );\n}","import React from 'react';\nimport {FormControl, MenuItem, Select, Typography, Button} from \"@material-ui/core\";\nimport AddIcon from '@material-ui/icons/Add';\nimport {get_data} from \"../ApiCall\";\nimport {BACK_END_URL} from \"../ServiceURL\";\nimport AddBranchDialog from \"../Component/Branch/Dialog.AddBranch\";\nimport TableBranch from \"../Component/Branch/Table.Branch\";\nconst BranchPage = () => {\n    const [listBranch, setListBranch] = React.useState([])\n    const [openAddDialog, setOpenAddDialog] = React.useState(false)\n    const [totalBranch, setTotalBranch] = React.useState(0)\n    React.useEffect(() => {\n        get_data(BACK_END_URL + '/public/branch', {}, false)\n            .then(res => {\n                setListBranch(res.data.list_branch)\n                setTotalBranch(res.data.total_branch)\n            })\n    }, [])\n    const refresh_list = () => {\n         get_data(BACK_END_URL + '/public/branch', {}, false)\n            .then(res => {\n                setListBranch(res.data.list_branch)\n                setTotalBranch(res.data.total_branch)\n            })\n    }\n    return (\n        <div style={{padding: '2rem'}}>\n            <Typography variant={'h4'}>{`Branch (${totalBranch})`}</Typography>\n            <div style={{display :'flex', flexDirection : \"row\" , marginTop: '2rem'}}>\n                <Button variant={'contained'} color={'primary'} style={{height : '3rem'}}\n                onClick={()=>{setOpenAddDialog(true)}}>\n                    <AddIcon/>\n                    {`Add Branch`}</Button>\n            </div>\n            <TableBranch data = {listBranch} refresh_list = {refresh_list}/>\n            <AddBranchDialog open = {openAddDialog} onClose = {()=>setOpenAddDialog(false)} refresh_list = {refresh_list}/>\n        </div>\n    );\n};\n\nexport default BranchPage;"],"sourceRoot":""}