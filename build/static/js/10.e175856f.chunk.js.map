{"version":3,"sources":["Pages/OrdersPage.js","Component/Orders/DialogAddProduct.js","Pages/OrderSinglePage.js"],"names":["GetFormattedDate","date_str","date","Date","month","getMonth","getDate","getFullYear","getHours","getMinutes","slice","useStyle","makeStyles","container","padding","body","cellHeader","fontWeight","backgroundColor","display","flexDirection","textAlign","status","width","margin","color","borderRadius","toolbar","marginBottom","search","border","opacity","float","flexGrow","filter","marginRight","OrdersPage","classes","useState","list","page","item_per_page","total_page","total","orderList","setOrderList","curStatus","setCurStatus","query","setQuery","startDate","getTime","endDate","datePicker","setDatePicker","useEffect","get_data","BACK_END_URL","iter_per_page","date_from","date_to","then","res","data","list_order","className","variant","required","value","onChange","e","target","selected","disableHoverListener","arrow","placement","title","Fragment","style","fontSize","paddingRight","onKeyDown","key","id","disableUnderline","name","startAdornment","paddingLeft","align","map","item","index","to","order_id","date_create","ordered_product","product","quantity","phone_number_1","phone_number_2","rowsPerPageOptions","component","count","rowsPerPage","onChangePage","event","newPage","onChangeRowsPerPage","DialogAddProduct","open","onClose","handleAddToOrder","productId","setProductId","isLoading","productDetail","setProductDetail","isExpand","setExpand","error","message","isError","setError","setQuantity","Dialog","Typography","Divider","boxSizing","type","Button","onClick","catch","alt","src","url_image_main","marginLeft","textDecoration","Number","price","toLocaleString","sale_price","alignSelf","post_data","product_id","console","log","orderId","bodyOrder","marginTop","justifyContent","orderDetail","orderDetailTitle","image","detailBody","detailElement","priceContainer","mainPrice","x","customer","requireInfo","customerElement","textRight","OrderSinglePage","useParams","isOpenDialog","setOpenDialog","address","city","company_address","company_name","date_update","district","note","payment_method","ship_method","tax_number","time_ship","vat_required","ward","order","setOrder","isEditing","setEditing","total_price","useMemo","reduce","cur","handleChange","val","city_id","district_id","list_orders","ward_id","put_data","Paper","maxWidth","href","FRONT_END_URL","disabled","order_product","handleQuantityChange","delete_data","splice","handleDeleteProduct","rows","order_list","push"],"mappings":"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","file":"static/js/10.e175856f.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {\n    Table,\n    TableHead,\n    TableBody,\n    TableCell,\n    TableRow,\n    Paper,\n    Typography,\n    Select,\n    MenuItem,\n    FormControl, Input, InputAdornment\n} from \"@material-ui/core\";\nimport {get_data} from \"../ApiCall\";\nimport {BACK_END_URL} from \"../ServiceURL\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport SubdirectoryArrowRightRoundedIcon from \"@material-ui/icons/SubdirectoryArrowRightRounded\";\nimport SearchRoundedIcon from \"@material-ui/icons/SearchRounded\";\nimport {HtmlTooltip} from \"../Component/Product/Table.Product\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport DatePicker from \"react-datepicker\";\nimport './DatePicker.css'\nimport {NavLink} from \"react-router-dom\";\n\nexport function GetFormattedDate(date_str) {\n    var date = new Date(date_str);\n    var month = date.getMonth();\n    var day = date.getDate();\n    var year = date.getFullYear();\n    var hour = date.getHours()\n    var minute = (\"0\" + date.getMinutes()).slice(-2);\n    var time_day = day + \"/\" + month + \"/\" + year;\n    var time_hours = hour + \":\" + minute\n    return [time_day, time_hours]\n}\n\nconst useStyle = makeStyles({\n    container: {\n        padding: '1em'\n    },\n    body: {},\n    cellHeader: {\n        fontWeight: 'bold',\n        backgroundColor: '#cccccc'\n    },\n    date: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        textAlign: \"center\"\n\n    },\n    status: {\n        width: '136px',\n        margin: \"auto\",\n        padding: '0.25em',\n        color: 'white',\n        borderRadius: '3px',\n    },\n    toolbar: {\n        marginBottom: '1em',\n        display: 'flex',\n        flexDirection: 'row'\n    },\n    search: {\n        border: '1px solid black',\n        // borderRadius : '1rem',\n        opacity: '70%',\n        float: 'right',\n        flexGrow: 1,\n        borderRadius: '5px',\n        backgroundColor: 'white',\n        '&>input': {\n            // borderRadius : '0 1rem 1rem 0',\n        }\n    },\n    filter: {\n        width: '200px',\n        marginRight: '2em',\n        backgroundColor: 'white'\n    }\n})\n\nconst OrdersPage = () => {\n    const classes = useStyle()\n    const [orderList, setOrderList] = useState({\n        list: [],\n        page: 1,\n        item_per_page: 10,\n        total_page: 1,\n        total: 0,\n    })\n    const [curStatus, setCurStatus] = useState(-1)\n    const handleStatusChange = (e) => {\n        setCurStatus(e.target.value)\n    }\n    const [query, setQuery] = useState('')\n    const [datePicker, setDatePicker] = useState({\n        startDate: new Date(new Date().getTime() - (30 * 24 * 60 * 60 * 1000)),\n        endDate: new Date()\n    })\n    const handleStartDateChange = (date) => {\n        setDatePicker({\n            ...datePicker,\n            startDate: date\n        })\n    }\n    const handleEndDateChange = (date) => {\n        setDatePicker({\n            ...datePicker,\n            endDate: date\n        })\n    }\n    useEffect(() => {\n        get_data(BACK_END_URL + 'admin/order', {\n            page: orderList.page,\n            iter_per_page: orderList.item_per_page,\n            status: curStatus,\n            query: query,\n            date_from: datePicker.startDate,\n            date_to: datePicker.endDate,\n        }, true)\n            .then(res => setOrderList({\n                page: res.data.page,\n                item_per_page: res.data.item_per_page,\n                list: res.data.list_order,\n                total_page: res.data.total_page,\n                total: res.data.total\n            }))\n    }, [orderList.page, orderList.item_per_page, curStatus, datePicker])\n    const handleChangePage = (event, newPage) => {\n        setOrderList({\n            ...orderList,\n            page: newPage + 1\n        });\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setOrderList({\n            ...orderList,\n            page: 1,\n            item_per_page: event.target.value\n        })\n    };\n    const handleChange = (e) => {\n        setQuery(e.target.value)\n    }\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            get_data(BACK_END_URL + 'admin/order', {\n                page: orderList.page,\n                iter_per_page: orderList.item_per_page,\n                status: curStatus,\n                query: query,\n                date_from: datePicker.startDate,\n                date_to: datePicker.endDate,\n            }, true)\n                .then(res => setOrderList({\n                    page: res.data.page,\n                    item_per_page: res.data.item_per_page,\n                    list: res.data.list_order,\n                    total_page: res.data.total_page,\n                    total: res.data.total\n                }))\n        }\n    }\n    return (\n        <div className={classes.container}>\n            <h2>Orders</h2>\n            <div className={classes.toolbar}>\n                <FormControl variant=\"outlined\" required className={classes.filter}>\n                    <Select\n                        value={curStatus}\n                        onChange={handleStatusChange}\n                    >\n                        <MenuItem value={-1}>Tất cả</MenuItem>\n                        <MenuItem value={0}>Mới</MenuItem>\n                        <MenuItem value={1}>Đang vận chuyển</MenuItem>\n                        <MenuItem value={2}>Đã nhận</MenuItem>\n                        <MenuItem value={3}>Hoàn</MenuItem>\n\n                    </Select>\n                </FormControl>\n                <DatePicker\n                    selected={datePicker.startDate}\n                    onChange={handleStartDateChange}\n                />\n                <DatePicker\n                    selected={datePicker.endDate}\n                    onChange={handleEndDateChange}\n                />\n                <HtmlTooltip disableHoverListener arrow={true} placement=\"bottom-start\"\n                             title={\n                                 <React.Fragment>\n                                     <Typography style={{fontSize: '0.7rem'}}>{`Press `}\n                                         <div style={{\n                                             border: \"1px solid #888a8c\",\n                                             padding: '0 0.5rem 0 0.5rem',\n                                             borderRadius: '3px',\n                                             display: 'inline-block'\n                                         }}>\n                                             <SubdirectoryArrowRightRoundedIcon\n                                                 style={{fontSize: '0.7rem', paddingRight: '0.3rem'}}/>\n                                             Enter\n                                         </div>\n                                         {` to search`}</Typography>\n                                 </React.Fragment>\n                             }\n                >\n                    <Input className={classes.search}\n                           onKeyDown={handleKeyDown}\n                           id=\"input-with-icon-textfield\" disableUnderline\n                           onChange={handleChange}\n                           name=\"search\"\n                           value={query}\n                           startAdornment={(<InputAdornment>\n                               <SearchRoundedIcon style={{paddingLeft: '0.5rem', paddingRight: '0.5rem'}}/>\n                           </InputAdornment>)}\n                    />\n                </HtmlTooltip>\n            </div>\n            <Paper className={classes.body}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell className={classes.cellHeader} align={'center'}>ID</TableCell>\n                            <TableCell className={classes.cellHeader} align={'center'}>DATE</TableCell>\n                            <TableCell className={classes.cellHeader} align={'center'}>STATUS</TableCell>\n                            <TableCell className={classes.cellHeader} align={'center'}>ORDER ITEMS</TableCell>\n                            <TableCell className={classes.cellHeader} align={'center'}>CUSTOMER</TableCell>\n                            <TableCell className={classes.cellHeader} align={'center'}>ACTIONS</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            orderList.list.map((item, index) => {\n                                return <TableRow key={index}>\n                                    <TableCell align={'center'}>\n                                        <NavLink to = {`/orders/${item.order_id}`}>\n                                        {`#${item.order_id}`}\n                                        </NavLink>\n                                    </TableCell>\n                                    <TableCell align={'center'}>\n                                        <div className={classes.date}>\n                                            <Typography>{GetFormattedDate(item.date_create)[0]}</Typography>\n                                            <Typography\n                                                style={{fontSize: '0.9em'}}>{GetFormattedDate(item.date_create)[1]}</Typography>\n                                        </div>\n                                    </TableCell>\n                                    <TableCell align={'center'}>\n                                        <p className={classes.status} style={{\n                                            backgroundColor: item.status === 0 ? '#c20000' : item.status === 1 ? '#c2ab00'\n                                                : item.status === 2 ? 'green' : 'grey'\n                                        }}>\n                                            {\n                                                item.status === 0 ? 'Mới' : item.status === 1 ? 'Đang vận chuyển'\n                                                    : item.status === 2 ? 'Đã nhận' : 'Hoàn'\n                                            }\n                                        </p>\n                                    </TableCell>\n                                    <TableCell align='center'>\n                                        {\n                                            item.ordered_product.map((item, index) => {\n                                                return <div key={index}>\n                                                    {item.product.name} x {item.quantity}\n                                                </div>\n                                            })\n                                        }\n                                    </TableCell>\n                                    <TableCell align={'center'}>\n                                        <div>{item.name}</div>\n                                        <div>{`${item.phone_number_1}`} {item.phone_number_2 !== \"\" ? `-${item.phone_number_2}` : ''}</div>\n                                    </TableCell>\n                                </TableRow>\n                            })\n                        }\n                    </TableBody>\n                </Table>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={orderList.total}\n                    rowsPerPage={orderList.item_per_page}\n                    page={orderList.page - 1}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    );\n};\n\nexport default OrdersPage;","import React, {useState} from 'react';\nimport {Button, Dialog, Divider, Typography} from \"@material-ui/core\";\nimport {delete_data, get_data, post_data} from \"../../ApiCall\";\nimport {BACK_END_URL} from \"../../ServiceURL\";\n\nconst DialogAddProduct = ({open, onClose, handleAddToOrder, order_id}) => {\n    const [productId, setProductId] = useState('')\n    const [productDetail, setProductDetail] = useState({\n        isLoading: true,\n        product: {}\n    })\n    const [isExpand, setExpand] = useState(false)\n    const [isError, setError] = useState({\n        error: false,\n        message: ''\n    })\n    const onProductIdChange = (e) => {\n        setProductId(e.target.value)\n    }\n    const searchProduct = () => {\n        setExpand(true)\n        setProductDetail({\n            ...productDetail,\n            isLoading: true\n        })\n        get_data(BACK_END_URL + `public/product/${productId}`, {}, false)\n            .then(res => {\n                setError({\n                    ...isError,\n                    error: false\n                })\n                setProductDetail({\n                    isLoading: false,\n                    product: res.data\n                })\n            })\n            .catch(error => {\n                setProductDetail({\n                    ...productDetail,\n                    isLoading: false\n                })\n                setError({\n                    error: true,\n                    message: 'Không tìm thấy sản phẩm'\n                })\n            })\n    }\n    const [quantity, setQuantity] = useState(1)\n    const handleChangeQuantity = (e) => {\n        setQuantity(e.target.value)\n    }\n    const handleAdd = (e) => {\n        post_data(BACK_END_URL + `admin/ordered_product`, {},{\n            product_id: productDetail.product.product_id,\n            order_id: order_id,\n            quantity: quantity\n        }, true)\n            .then(res => {\n                handleAddToOrder({\n                    product: productDetail.product,\n                    quantity: quantity\n                })\n            })\n            .catch(error => console.log(error))\n    }\n    return (\n        <Dialog open={open} onClose={onClose}>\n            <div style={{width: '500px'}}>\n                <Typography style={{fontWeight: \"bold\", padding: '1em'}}>Thêm sản phẩm</Typography>\n                <Divider/>\n                <div style={{padding: '1em'}}>\n                    <Typography>Search product with id:</Typography>\n                    <input style={{\n                        border: '1px solid rgba(0,0,0,0.1)', padding: '0.75em', width: '100%',\n                        boxSizing: 'border-box'\n                    }} type={'number'} value={productId} onChange={onProductIdChange}/>\n                </div>\n                <div style={{width: '100%', marginBottom: '1em'}}>\n                    <Button style={{display: 'block', margin: 'auto'}} variant={'contained'}\n                            color={'secondary'} onClick={searchProduct}>Search</Button>\n                </div>\n                {\n                    isExpand ?\n                        <div style={{padding: '1em'}}>\n                            {\n                                productDetail.isLoading ? <div>Loading...</div> :\n                                    isError.error ? <div>{isError.message}</div> :\n                                        <div style={{display: 'flex'}}>\n                                            <img alt={'image'}\n                                                 src={productDetail.product.url_image_main}\n                                                 style={{width: '7em'}}/>\n                                            <div style={{marginLeft: '1em'}}>\n                                                <Typography\n                                                    style={{fontWeight: 'bold'}}>{productDetail.product.name}</Typography>\n                                                <Typography style={{textDecoration: 'line-through'}}>\n                                                    {`${Number(productDetail.product.price).toLocaleString('vi')}`}\n                                                </Typography>\n                                                <Typography>\n                                                    {`${Number(productDetail.product.sale_price).toLocaleString('vi')}`}\n                                                </Typography>\n                                            </div>\n                                            <div style={{alignSelf: 'center', marginLeft: \"2em\"}}>x</div>\n                                            <input style={{\n                                                alignSelf: 'center', width: '2em', padding: '0.75em',\n                                                marginLeft: '2em', textAlign: 'center'\n                                            }} value={quantity} type={'number'} onChange={handleChangeQuantity}/>\n                                            <div style={{flexGrow: 1}}></div>\n                                            <Button variant={'contained'} color={'primary'}\n                                                    style={{alignSelf: 'center', marginLeft: '2em'}}\n                                                    onClick={handleAdd}>Add</Button>\n                                        </div>\n                            }\n                        </div> : null\n                }\n            </div>\n        </Dialog>\n    );\n};\n\nexport default DialogAddProduct;","import React, {useEffect, useMemo, useState} from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Typography, Paper, Divider, Button, Dialog} from \"@material-ui/core\";\nimport {useParams} from \"react-router-dom\"\nimport {delete_data, get_data, put_data} from \"../ApiCall\";\nimport {BACK_END_URL, FRONT_END_URL} from \"../ServiceURL\";\nimport {GetFormattedDate} from \"./OrdersPage\";\nimport DialogAddProduct from \"../Component/Orders/DialogAddProduct\";\n\nconst useStyle = makeStyles({\n    container: {\n        padding: '1em'\n    },\n    orderId: {\n        fontSize: '1.5em',\n        fontWeight: 'bold',\n        marginRight: '0.5em'\n    },\n    bodyOrder: {\n        marginTop: '1em',\n        display: 'flex',\n        width: '100%',\n        justifyContent: 'space-between'\n    },\n    orderDetail: {\n        width: '100%',\n        alignSelf: 'flex-start'\n    },\n    orderDetailTitle: {\n        padding: '1em',\n        fontWeight: 'bold'\n    },\n    image: {\n        width: '5em',\n        border: '1px solid rgba(0,0,0,0.1)'\n    },\n    detailBody: {\n        padding: '1em'\n    },\n    detailElement: {\n        display: 'flex',\n        marginTop: '1em'\n    },\n    priceContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n    },\n    mainPrice: {\n        textDecoration: \"line-through\"\n    },\n    x: {\n        marginLeft: '1em',\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: 'center'\n    },\n    customer: {\n        width: '29%'\n    },\n    requireInfo: {\n        padding: '1em'\n    },\n    customerElement: {\n        display: 'flex',\n        marginTop: '0.5em'\n    },\n    textRight: {\n        textAlign: 'left',\n        fontWeight: 'bold',\n    }\n})\nconst OrderSinglePage = () => {\n    const classes = useStyle()\n    const {id} = useParams()\n    const [isOpenDialog, setOpenDialog] = useState(false)\n    const [order, setOrder] = useState({\n        address: \"\",\n        city: {id: 1, name: null},\n        company_address: null,\n        company_name: null,\n        date_create: \"\",\n        date_update: \"\",\n        district: {id: 1, name: null},\n        name: \"\",\n        note: null,\n        order_id: 612033,\n        ordered_product: [],\n        payment_method: 0,\n        phone_number_1: \"\",\n        phone_number_2: \"\",\n        ship_method: 0,\n        status: 0,\n        tax_number: null,\n        time_ship: 0,\n        vat_required: false,\n        ward: {id: 1, name: null},\n    })\n    const [isEditing, setEditing] = useState(true)\n    useEffect(() => {\n        get_data(BACK_END_URL + `admin/order/${id}`, {}, true)\n            .then(res => {\n                setOrder({\n                    address: res.data.address,\n                    city: {id: res.data.city.id, name: res.data.city.name},\n                    company_address: res.data.company_address,\n                    company_name: res.data.company_name,\n                    date_create: res.data.date_create,\n                    date_update: res.data.date_update,\n                    district: {id: res.data.district.id, name: res.data.district.name},\n                    name: res.data.name,\n                    note: res.data.note,\n                    order_id: id,\n                    ordered_product: res.data.ordered_product,\n                    payment_method: res.data.payment_method,\n                    phone_number_1: res.data.phone_number_1,\n                    phone_number_2: res.data.phone_number_2,\n                    ship_method: res.data.ship_method,\n                    status: res.data.status,\n                    tax_number: res.data.tax_number,\n                    time_ship: res.data.time_ship,\n                    vat_required: res.data.vat_required,\n                    ward: {id: res.data.ward.id, name: res.data.ward.name},\n                })\n            })\n            .catch(error => console.log(error))\n    }, [id])\n    const total_price = useMemo(() => {\n        let total = order.ordered_product.reduce((total, cur) => {\n            return total + cur.quantity * cur.product.sale_price\n        }, 0)\n        return total\n    }, [order])\n    const handleSaveOrder = () => {\n        const data = {\n            address: order.address,\n            city_id: order.city.id,\n            company_address: order.company_address,\n            company_name: order.company_name,\n            date_create: order.date_create,\n            date_update: order.date_update,\n            district_id: order.district.id,\n            name: order.name,\n            note: order.note,\n            list_orders: order.ordered_product.map(item => {\n                return {\n                    product_id: item.product.product_id,\n                    quantity: item.quantity\n                }\n            }),\n            payment_method: order.payment_method,\n            phone_number_1: order.phone_number_1,\n            phone_number_2: order.phone_number_2,\n            ship_method: order.ship_method,\n            status: order.status,\n            tax_number: order.tax_number,\n            time_ship: order.time_ship,\n            vat_required: order.vat_required,\n            ward_id: order.ward.id,\n        }\n        put_data(BACK_END_URL + `admin/order/${id}`, {}, data, true)\n            .then(res => {\n                setEditing(true)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n    const handleChange = (e) => {\n        let val = e.target.value\n        let name = e.target.name\n        setOrder({\n            ...order,\n            [name]: val\n        })\n    }\n    const handleQuantityChange = (e, index) => {\n        let order_product = order.ordered_product;\n        order_product[index].quantity = e.target.value\n        setOrder({\n            ...order,\n            ordered_product: order_product\n        })\n    }\n    const handleDeleteProduct = (index, product_id) => {\n        delete_data(BACK_END_URL + `admin/ordered_product/${id}/${product_id}`, {}, true)\n            .then(res => {\n                let order_product = order.ordered_product;\n                order_product.splice(index, 1)\n                setOrder({\n                    ...order,\n                    ordered_product: order_product\n                })\n            })\n    }\n    const handleAddToOrder = (data) => {\n        let order_list = order.ordered_product\n        order_list.push({\n            product: data.product,\n            quantity: data.quantity,\n        })\n        setOrder({\n            ...order,\n            ordered_product: order_list\n        })\n        setOpenDialog(false)\n    }\n    return (\n        <div className={classes.container}>\n            <span className={classes.orderId}>{`Order ID : #${id}`}</span>\n            <span>{`${GetFormattedDate(order.date_create)[0]} at ${GetFormattedDate(order.date_create)[1]}`}</span>\n            {\n                isEditing ?\n                    <Button style={{display: 'block', marginTop: '1em'}} variant={'contained'} onClick={() => {\n                        setEditing(false)\n                    }}\n                            color={'primary'}>Edit</Button> :\n                    <Button style={{\n                        display: 'block',\n                        marginTop: '1em'\n                    }} variant={'contained'} color={'secondary'} onClick={handleSaveOrder}>Save</Button>\n            }\n            <div className={classes.bodyOrder}>\n                <div style={{width: '69%'}}>\n                    <Paper className={classes.orderDetail}>\n                        <Typography variant={'h6'} className={classes.orderDetailTitle}>\n                            Order Details\n                        </Typography>\n                        <Divider></Divider>\n                        <div className={classes.detailBody}>\n                            {\n                                order.ordered_product.map((item, index) => {\n                                    return <div className={classes.detailElement} key={index}>\n                                        <img className={classes.image}\n                                             src={item.product.url_image_main} alt={'image_product'}/>\n                                        <div style={{\n                                            display: 'flex',\n                                            flexDirection: 'column',\n                                            justifyContent: 'center',\n                                            marginLeft: '1em',\n                                            maxWidth: '10em'\n                                        }}>\n                                            <a target=\"_blank\"\n                                               style={{\n                                                   fontSize: '1em',\n                                                   fontWeight: \"bold\"\n                                               }}\n                                               href={FRONT_END_URL + `/product/${item.product.product_id}`}>{item.product.name}</a>\n                                        </div>\n                                        <div style={{flexGrow: 1}}></div>\n                                        <div className={classes.priceContainer}>\n                                            <Typography\n                                                className={classes.mainPrice}>{`${Number(item.product.price).toLocaleString('vi')}đ`}</Typography>\n                                            <Typography>{`${Number(item.product.sale_price).toLocaleString('vi')}đ`}</Typography>\n                                        </div>\n                                        <div className={classes.x}><span>x</span></div>\n                                        <div className={classes.x}>\n                                            <input value={item.quantity} disabled={isEditing}\n                                                   style={{padding: '0.5em', width: '2em'}}\n                                                   onChange={(e) => handleQuantityChange(e, index)}>\n\n                                            </input>\n                                        </div>\n                                        <div style={{flexGrow: 1}}></div>\n                                        <div className={classes.x} style={{fontWeight: 'bold'}}>\n                                            <span>{`${Number(item.product.sale_price * item.quantity).toLocaleString('vi')}đ`}</span>\n                                        </div>\n                                        {\n                                            !isEditing ?\n                                                <Button variant={'contained'}\n                                                        onClick={() => handleDeleteProduct(index, item.product.product_id)}\n                                                        style={{\n                                                            alignSelf: 'center',\n                                                            marginLeft: '1em'\n                                                        }}>Delete</Button> : null\n                                        }\n                                    </div>\n                                })\n                            }\n                            {\n                                isEditing ? null :\n                                    <div style={{width: '100%'}}>\n                                        <Button style={{display: \"block\", margin: \"auto\", marginTop: '1em'}}\n                                                variant={'contained'} color={'secondary'} onClick={() => {\n                                            setOpenDialog(true)\n                                        }}>Thêm sản\n                                            phẩm</Button>\n                                    </div>\n                            }\n                        </div>\n                        <Divider></Divider>\n                        <div style={{display: 'flex', justifyContent: 'flex-end', padding: '1em'}}>\n                            <div style={{flexGrow: 1}}></div>\n                            <Typography\n                                style={{fontWeight: 'bold', fontSize: '1.2rem', marginRight: '2em'}}>Total</Typography>\n                            <Typography style={{fontWeight: 'bold', fontSize: '1.2rem'}}>\n                                {`${Number(total_price).toLocaleString('vi')}đ`}\n                            </Typography>\n                        </div>\n                    </Paper>\n                    <Paper style={{marginTop: '1em'}}>\n                        <Typography variant={'h6'} style={{fontWeight: \"bold\", padding: '1em'}}>More\n                            Infomation</Typography>\n                        <Divider/>\n                        <div style={{padding: '1em'}}>\n                            <div className={classes.customerElement}>\n                                <Typography>\n                                    Note:\n                                </Typography>\n                                <div style={{flexGrow: 1}}></div>\n                                <textarea value={order.note} name='note' className={classes.textRight} rows={4}\n                                          onChange={handleChange}\n                                          style={{width: '70%'}} disabled={isEditing}>\n                            </textarea>\n                            </div>\n                            <div className={classes.customerElement}>\n                                <Typography>\n                                    Company Tax:\n                                </Typography>\n                                <div style={{flexGrow: 1}}></div>\n                                <input style={{width: '70%'}} className={classes.textRight} value={order.tax_number}\n                                       name='tax_number' disabled={isEditing} onChange={handleChange}>\n                                </input>\n                            </div>\n                            <div className={classes.customerElement}>\n                                <Typography>\n                                    Company Name:\n                                </Typography>\n                                <div style={{flexGrow: 1}}></div>\n                                <input style={{width: '70%'}} className={classes.textRight} value={order.company_name}\n                                       name='company_name' disabled={isEditing} onChange={handleChange}>\n                                </input>\n                            </div>\n                            <div className={classes.customerElement}>\n                                <Typography>\n                                    Company Address:\n                                </Typography>\n                                <div style={{flexGrow: 1}}></div>\n                                <input style={{width: '70%'}} className={classes.textRight} onChange={handleChange}\n                                       value={order.company_address} name='company_address' disabled={isEditing}>\n                                </input>\n                            </div>\n                        </div>\n                        <div style={{padding: '1em'}}>\n                            <Typography style={{fontWeight: \"bold\"}}>Shipping</Typography>\n                            <div className={classes.customerElement}>\n                                <Typography>\n                                    Ship method:\n                                </Typography>\n                                <div style={{flexGrow: 1}}></div>\n                                <select value={order.ship_method} style={{width: '71%', fontWeight: \"bold\"}}\n                                        name='ship_method' disabled={isEditing} onChange={handleChange}>\n                                    <option value={0}>Vận chuyển miễn phí</option>\n                                    <option value={1}>Vận chuyển có phí</option>\n                                    <option value={2}>Quý khách nhận hàng tại VIETNHAT</option>\n                                    <option value={3}>Muốn thỏa thuận với VIETNHAT</option>\n                                </select>\n\n                            </div>\n                            <div className={classes.customerElement}>\n                                <Typography>\n                                    Ship time:\n                                </Typography>\n                                <div style={{flexGrow: 1}}></div>\n                                <select value={order.time_ship} style={{width: '71%', fontWeight: \"bold\"}}\n                                        onChange={handleChange}\n                                        name='time_ship' disabled={isEditing}>\n                                    <option value={0}>Bất kì</option>\n                                    <option value={1}>Trong giờ hành chính</option>\n                                    <option value={2}>Ngoài giờ hành chính</option>\n                                </select>\n                            </div>\n                        </div>\n                    </Paper>\n                </div>\n                <Paper className={classes.customer}>\n                    <Typography variant={'h6'} className={classes.orderDetailTitle}>Customer</Typography>\n                    <Divider></Divider>\n                    <div className={classes.requireInfo}>\n                        <div className={classes.customerElement}>\n                            <Typography>\n                                Name:\n                            </Typography>\n                            <div style={{flexGrow: 1}}></div>\n                            <input className={classes.textRight} value={order.name} name=\"name\" disabled={isEditing}\n                                   onChange={handleChange}>\n\n                            </input>\n                        </div>\n                        <div className={classes.customerElement}>\n                            <Typography>\n                                Phone Number 1:\n                            </Typography>\n                            <div style={{flexGrow: 1}}></div>\n                            <input className={classes.textRight} value={order.phone_number_1} name='phone_number_1'\n                                   onChange={handleChange}\n                                   disabled={isEditing}>\n                            </input>\n                        </div>\n                        <div className={classes.customerElement}>\n                            <Typography>\n                                Phone Number 2:\n                            </Typography>\n                            <div style={{flexGrow: 1}}></div>\n                            <input className={classes.textRight} value={order.phone_number_2} name='phone_number_2'\n                                   onChange={handleChange}\n                                   disabled={isEditing}>\n                            </input>\n                        </div>\n                    </div>\n                    <Divider/>\n                    <div style={{padding: '1em'}}>\n                        <Typography style={{fontWeight: \"bold\"}}>Shipping Adress</Typography>\n                        <div>\n                            <div className={classes.customerElement}>\n                                <Typography>\n                                    City:\n                                </Typography>\n                                <div style={{flexGrow: 1}}></div>\n                                <Typography className={classes.textRight}>\n                                    {order.city.name}\n                                </Typography>\n                            </div>\n                            <div className={classes.customerElement}>\n                                <Typography>\n                                    District:\n                                </Typography>\n                                <div style={{flexGrow: 1}}></div>\n                                <Typography className={classes.textRight}>\n                                    {order.district.name}\n                                </Typography>\n                            </div>\n                            <div className={classes.customerElement}>\n                                <Typography>\n                                    Ward:\n                                </Typography>\n                                <div style={{flexGrow: 1}}></div>\n                                <Typography className={classes.textRight}>\n                                    {order.ward.name}\n                                </Typography>\n                            </div>\n                            <div style={{marginTop: '0.5em'}}>\n                                <div className={classes.customerElement}>\n                                    <Typography>\n                                        Specific Address:\n                                    </Typography>\n                                    {/*<div style={{flexGrow: 1}}></div>*/}\n                                    <textarea className={classes.textRight} value={order.address} disabled={isEditing}\n                                              onChange={handleChange}\n                                              name=\"address\" rows={4} style={{width: '100%', textAlign: 'left'}}>\n                                    </textarea>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Paper>\n            </div>\n            <DialogAddProduct open={isOpenDialog} onClose={() => setOpenDialog(false)}\n                              handleAddToOrder={handleAddToOrder}/>\n        </div>\n    );\n};\n\nexport default OrderSinglePage;"],"sourceRoot":""}