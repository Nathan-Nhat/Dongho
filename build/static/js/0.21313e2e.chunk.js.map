{"version":3,"sources":["Component/Category/Dialog.AddCategory.jsx","Component/Category/Dialog.EditCategory.jsx","Component/IsNewComponent.js","Component/IsHotComponent.js","Component/Product/Table.Product.js","Component/Branch/Dialog.EditBranch.jsx","Component/Branch/Table.Branch.jsx"],"names":["useStyles","makeStyles","avatar","backgroundColor","blue","color","container","padding","minWidth","input","width","icon","footer","display","flexDirection","marginTop","justifyContent","AddCategoryDialog","props","onClose","refresh_list","open","parent","classes","useState","name","icon_class","state","setState","iconSrc","setIconSrc","bannerSrc","setBannerSrc","openIcon","setOpenIcon","src","aspect","dataIcon","setDataIcon","openBanner","setOpenBanner","dataBanner","setDataBanner","aria-labelledby","id","className","style","marginBottom","variant","placeholder","required","value","onChange","e","target","val","htmlFor","height","border","backgroundImage","backgroundSize","backgroundRepeat","type","file","files","url","URL","createObjectURL","onClick","post_data","BACK_END_URL","category_id","banner","then","res","catch","error","marginLeft","data","setPImage","url_image","EditCategoryDialog","useEffect","put_data","alert","IsNewComponent","product_id","is_new","isLoading","CircularProgress","size","checked","console","log","IsHotComponent","is_hot","table","imageMain","allTable","fontWeight","borderBottom","searchContainer","search","opacity","float","selectContainer","borderRight","outline","fontSize","optionSelect","headerTable","HtmlTooltip","withStyles","theme","tooltip","maxWidth","typography","pxToRem","arrow","Tooltip","TableProduct","list_product","page","total_page","item_per_page","total","order","openDeleteDialog","setOpenDeleteDialog","itemDelete","setItemDelete","get_data","list","query","handleChange","Paper","Typography","Divider","disabled","disableHoverListener","placement","title","Fragment","borderRadius","paddingRight","Input","onKeyDown","key","disableUnderline","searchValue","startAdornment","InputAdornment","paddingLeft","TableContainer","maxHeight","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","url_image_main","component","scope","to","Number","price","toLocaleString","sale_price","sub_category","category","remain","IconButton","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","event","newPage","onChangeRowsPerPage","handleDelete","delete_data","EditBranchDialog","address","time_work","phone","email","description","Dialog","DialogTitle","TextField","multiline","rows","Button","branch_id","margin","TableBranch","React","openEditDialog","setOpenEditDialog","dataEdit","setDataEdit","Box"],"mappings":"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","file":"static/js/0.21313e2e.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport {blue} from '@material-ui/core/colors';\nimport {TextField, Typography, Button} from \"@material-ui/core\";\nimport HelpIcon from '@material-ui/icons/Help';\nimport {post_data} from \"../../ApiCall\";\nimport {BACK_END_URL} from \"../../ServiceURL\";\nimport ImageDialog from \"../ImageDialog\";\n\nconst useStyles = makeStyles({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    container: {\n        padding: '1rem',\n        minWidth: '500px'\n    },\n    input: {\n        width: '100%'\n    },\n    icon: {\n        width: '100%'\n    },\n    footer: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginTop: '1rem',\n        justifyContent: 'flex-end'\n    }\n});\nexport default function AddCategoryDialog(props) {\n    const {onClose, refresh_list, open, parent} = props;\n    const classes = useStyles();\n    const [state, setState] = useState({\n        name: '',\n        icon_class: ''\n    })\n\n    const handleAddCategory = () => {\n        post_data(BACK_END_URL +'/admin/sub_category', {}, {\n            name : state.name,\n            category_id: parent.id,\n            banner : bannerSrc,\n            icon: iconSrc\n        }, true)\n            .then(res => {\n                refresh_list()\n                onClose()\n            })\n            .catch(error => {})\n    };\n    const handleChange = (e) => {\n        let name = e.target.name\n        let val = e.target.value\n        setState({\n            ...state,\n            [name]: val\n        })\n    }\n    const [iconSrc, setIconSrc] = useState(null)\n    const [bannerSrc, setBannerSrc] = useState(null)\n    const [openIcon, setOpenIcon] = useState(false)\n    const [dataIcon, setDataIcon] = useState({\n        name: null,\n        src: null,\n        aspect: 1/1,\n    })\n    const handleIconChange = (e) => {\n        const file = e.target.files[0]\n        let url = URL.createObjectURL(file)\n        setDataIcon({\n            src: url,\n            aspect: 1/1\n        })\n        setOpenIcon(true)\n    }\n    const handleSetIcon = (e => {\n        let name = e.name\n        let value = e.url_image\n        setIconSrc(value)\n    })\n\n    const [openBanner, setOpenBanner] = useState(false)\n    const [dataBanner, setDataBanner] = useState({\n        name: null,\n        src: null,\n        aspect: 3.5/1,\n    })\n    const handleBannerChange = (e) => {\n        const file = e.target.files[0]\n        let url = URL.createObjectURL(file)\n        setDataBanner({\n            src: url,\n            aspect: 3.5/1\n        })\n        setOpenBanner(true)\n    }\n    const handleSetBanner = (e => {\n        let name = e.name\n        let value = e.url_image\n        setBannerSrc(value)\n    })\n    return (\n        <Dialog aria-labelledby=\"add-category\" open={open}>\n            <DialogTitle id = \"add-category\">Add Category</DialogTitle>\n            <div className={classes.container}>\n                <Typography style={{marginTop: '1rem', marginBottom: '0.5rem'}}>Name sub-category:</Typography>\n                <TextField variant={'outlined'} placeholder={'Name Category'} required={true}\n                           name='name' value={state.name} onChange={handleChange} className={classes.input}></TextField>\n                <span>Icon: </span>\n                <label htmlFor={'input-icon-pcat'}>Upload</label>\n                <div style={{\n                    width: '3em',\n                    height: '3em',\n                    border: iconSrc ? 'none' : '1px dashed black',\n                    marginTop: '1em',\n                    marginBottom: '1em',\n                    backgroundImage: iconSrc ? `url(${iconSrc})` : 'none',\n                    backgroundSize: 'contain',\n                    backgroundRepeat: 'no-repeat'\n                }}>\n\n                </div>\n                <input type='file' id=\"input-icon-pcat\" style={{display: \"none\"}} onChange={handleIconChange}/>\n                <span>Banner: </span>\n                <input type='file' id='input-banner-pcat' style={{display: \"none\"}} onChange={handleBannerChange}/>\n                <label htmlFor='input-banner-pcat'>Upload</label>\n                <div style={{\n                    width: '100%',\n                    height: '9em',\n                    border: iconSrc ? 'none' : '1px dashed black',\n                    marginTop: '1em',\n                    backgroundImage: bannerSrc ? `url(${bannerSrc})` : 'none',\n                    backgroundSize: 'contain',\n                    backgroundRepeat: 'no-repeat'\n                }}>\n                </div>\n                <div className={classes.footer}>\n                    <Button variant={'contained'} color={'primary'} onClick={handleAddCategory}>Save</Button>\n                    <Button style={{marginLeft: '0.5rem'}} onClick={onClose}>Cancel</Button>\n                </div>\n            </div>\n            <ImageDialog data={dataIcon} open={openIcon} setPImage={handleSetIcon} onClose = {()=>{setOpenIcon(false)}} />\n            <ImageDialog data={dataBanner} open={openBanner} setPImage={handleSetBanner} onClose = {()=>{setOpenBanner(false)}} />\n        </Dialog>\n    );\n}","import React, {useEffect, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport {blue} from '@material-ui/core/colors';\nimport {TextField, Typography, Button} from \"@material-ui/core\";\nimport HelpIcon from '@material-ui/icons/Help';\nimport {post_data, put_data} from \"../../ApiCall\";\nimport {BACK_END_URL} from \"../../ServiceURL\";\nimport ImageDialog from \"../ImageDialog\";\n\nconst useStyles = makeStyles({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    container: {\n        padding: '1rem',\n        minWidth: '500px'\n    },\n    input: {\n        width: '100%'\n    },\n    icon: {\n        width: '100%'\n    },\n    footer: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginTop: '1rem',\n        justifyContent: 'flex-end'\n    }\n});\nexport default function EditCategoryDialog(props) {\n    const {onClose, refresh_list, open, parent, data} = props;\n    const classes = useStyles();\n    const [state, setState] = useState({\n        name: '',\n    })\n    useEffect(() => {\n        setState({\n            ...state,\n            name: data.name\n        })\n        setIconSrc(data.icon)\n        setBannerSrc(data.banner)\n    }, [data])\n    const handleEditCategory = () => {\n        put_data(BACK_END_URL + `/admin/sub_category/${data.id}`, {}, {\n            name: state.name,\n            icon: iconSrc,\n            banner: bannerSrc\n        }, true)\n            .then(res => {\n                refresh_list()\n                onClose()\n            })\n            .catch(error => alert('Error when edit category'))\n    };\n    const handleChange = (e) => {\n        let name = e.target.name\n        let val = e.target.value\n        setState({\n            ...state,\n            [name]: val\n        })\n    }\n    const [iconSrc, setIconSrc] = useState(null)\n    const [bannerSrc, setBannerSrc] = useState(null)\n    const [openIcon, setOpenIcon] = useState(false)\n    const [dataIcon, setDataIcon] = useState({\n        name: null,\n        src: null,\n        aspect: 1/1,\n    })\n    const handleIconChange = (e) => {\n        const file = e.target.files[0]\n        let url = URL.createObjectURL(file)\n        setDataIcon({\n            src: url,\n            aspect: 1/1\n        })\n        setOpenIcon(true)\n    }\n    const handleSetIcon = (e => {\n        let name = e.name\n        let value = e.url_image\n        setIconSrc(value)\n    })\n\n    const [openBanner, setOpenBanner] = useState(false)\n    const [dataBanner, setDataBanner] = useState({\n        name: null,\n        src: null,\n        aspect: 3.5/1,\n    })\n    const handleBannerChange = (e) => {\n        const file = e.target.files[0]\n        let url = URL.createObjectURL(file)\n        setDataBanner({\n            src: url,\n            aspect: 3.5/1\n        })\n        setOpenBanner(true)\n    }\n    const handleSetBanner = (e => {\n        let name = e.name\n        let value = e.url_image\n        setBannerSrc(value)\n    })\n    return (\n        <Dialog aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogTitle>Add Category</DialogTitle>\n            <div className={classes.container}>\n                <Typography style={{marginTop: '1rem', marginBottom: '0.5rem'}}>Name sub-category:</Typography>\n                <TextField variant={'outlined'} placeholder={'Name Category'} required={true}\n                           name='name' value={state.name} onChange={handleChange} className={classes.input}></TextField>\n                <span>Icon: </span>\n                <label htmlFor={'input-icon-pcat'}>Upload</label>\n                <div style={{\n                    width: '3em',\n                    height: '3em',\n                    border: iconSrc ? 'none' : '1px dashed black',\n                    marginTop: '1em',\n                    marginBottom: '1em',\n                    backgroundImage: iconSrc ? `url(${iconSrc})` : 'none',\n                    backgroundSize: 'contain',\n                    backgroundRepeat: 'no-repeat'\n                }}>\n\n                </div>\n                <input type='file' id=\"input-icon-pcat\" style={{display: \"none\"}} onChange={handleIconChange}/>\n                <span>Banner: </span>\n                <input type='file' id='input-banner-pcat' style={{display: \"none\"}} onChange={handleBannerChange}/>\n                <label htmlFor='input-banner-pcat'>Upload</label>\n                <div style={{\n                    width: '100%',\n                    height: '9em',\n                    border: iconSrc ? 'none' : '1px dashed black',\n                    marginTop: '1em',\n                    backgroundImage: bannerSrc ? `url(${bannerSrc})` : 'none',\n                    backgroundSize: 'contain',\n                    backgroundRepeat: 'no-repeat'\n                }}>\n                </div>\n                <div className={classes.footer}>\n                    <Button variant={'contained'} color={'primary'} onClick={handleEditCategory}>Save</Button>\n                    <Button style={{marginLeft: '0.5rem'}} onClick={onClose}>Cancel</Button>\n                </div>\n            </div>\n            <ImageDialog data={dataIcon} open={openIcon} setPImage={handleSetIcon} onClose = {()=>{setOpenIcon(false)}} />\n            <ImageDialog data={dataBanner} open={openBanner} setPImage={handleSetBanner} onClose = {()=>{setOpenBanner(false)}} />\n        </Dialog>\n    );\n}","import React, {useEffect, useState} from 'react';\nimport {put_data} from \"../ApiCall\";\nimport {BACK_END_URL} from \"../ServiceURL\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nconst IsNewComponent = ({product_id, is_new}) => {\n    const [state, setState] = useState({\n        is_new: 0,\n        isLoading : false\n    })\n    useEffect(()=>{\n        setState({\n            ...state,\n            is_new: is_new,\n            isLoading: false\n        })\n    },[is_new, product_id])\n    const handleNewChange = (e)=>{\n        let val = e.target.checked? 1: 0\n        setState({\n            ...state, isLoading: true\n        })\n        put_data(BACK_END_URL + `admin/product/${product_id}/new`, {}, {is_new : val}, true)\n            .then(res => setState({\n                isLoading: false,\n                is_new: !state.is_new\n            }))\n            .catch(error => console.log(error))\n    }\n    return (\n        <div>\n            {\n                state.isLoading?\n                <CircularProgress size={20}/> :\n                <input type='checkbox' name='is_new' checked={state.is_new} onChange={handleNewChange}/>\n            }\n        </div>\n    );\n};\n\nexport default IsNewComponent;","import React, {useEffect, useState} from 'react';\nimport {put_data} from \"../ApiCall\";\nimport {BACK_END_URL} from \"../ServiceURL\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nconst IsHotComponent = ({product_id, is_hot}) => {\n    const [state, setState] = useState({\n        is_hot: 0,\n        isLoading : false\n    })\n    useEffect(()=>{\n        setState({\n            ...state,\n            is_hot: is_hot,\n            isLoading: false\n        })\n    },[is_hot, product_id])\n    const handleHotChange = (e)=>{\n        let val = e.target.checked? 1: 0\n        setState({\n            ...state, isLoading: true\n        })\n        put_data(BACK_END_URL + `admin/product/${product_id}/hot`, {}, {is_hot : val}, true)\n            .then(res => setState({\n                isLoading: false,\n                is_hot: !state.is_hot\n            }))\n            .catch(error => console.log(error))\n    }\n    return (\n        <div>\n            {\n                state.isLoading?\n                <CircularProgress size={20}/> :\n                <input type='checkbox' name='is_hot' checked={state.is_hot} onChange={handleHotChange}/>\n            }\n        </div>\n    );\n};\n\nexport default IsHotComponent;","import React, {useEffect, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TableBranch from \"../Branch/Table.Branch\";\nimport {NavLink} from \"react-router-dom\";\nimport {IconButton, Typography, Divider, withStyles, Tooltip, Input, InputAdornment} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport RestoreFromTrashIcon from \"@material-ui/icons/RestoreFromTrash\";\nimport DeleteDialog from \"../Dialog.Delete\";\nimport SubdirectoryArrowRightRoundedIcon from '@material-ui/icons/SubdirectoryArrowRightRounded';\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\nimport {delete_data, get_data} from \"../../ApiCall\";\nimport {BACK_END_URL} from \"../../ServiceURL\";\nimport TablePagination from '@material-ui/core/TablePagination';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IsNewComponent from \"../IsNewComponent\";\nimport IsHotComponent from \"../IsHotComponent\";\n\nconst useStyles = makeStyles({\n    container: {\n        height: '70vh',\n    },\n    table: {\n        minWidth: 650,\n    },\n    imageMain: {\n        height: '3rem',\n        width: '3rem'\n    },\n    allTable: {\n        display: 'inline-block',\n        marginTop: '2rem',\n        marginLeft: '2rem',\n        fontWeight: 'bold',\n        borderBottom: '3px solid blue'\n    },\n    searchContainer: {\n        padding: '2rem 1rem 2rem 1rem',\n        display: 'flex',\n        flexDirection: 'row'\n    },\n    search: {\n        border: '1px solid black',\n        // borderRadius : '1rem',\n        opacity: '70%',\n        float: 'right',\n        width: '100%',\n        '&>input': {\n            // borderRadius : '0 1rem 1rem 0',\n        }\n    },\n    selectContainer: {\n        borderRight: 0,\n        width: '7rem',\n        '&::selection': {\n            outline: 'none'\n        },\n        '&>*': {\n            fontSize: '1rem',\n            padding: '1rem'\n        }\n    },\n    optionSelect: {},\n    headerTable: {\n        '&>*': {\n            backgroundColor: 'white'\n        }\n    }\n});\n\nexport const HtmlTooltip = withStyles((theme) => ({\n    tooltip: {\n        backgroundColor: '#f5f5f9',\n        color: 'rgba(0, 0, 0, 0.87)',\n        maxWidth: 220,\n        fontSize: theme.typography.pxToRem(12),\n        border: '1px solid #dadde9',\n    },\n    arrow: {\n        color: \"#f5f5f9\"\n    }\n}))(Tooltip);\n\nexport default function TableProduct() {\n    const classes = useStyles();\n    const [state, setState] = useState({\n        list_product: [],\n        page: 1,\n        total_page: 1,\n        item_per_page: 5,\n        search: '',\n        total: 0,\n        order: 'name,asc',\n        isLoading: false\n    })\n    const [openDeleteDialog, setOpenDeleteDialog] = useState(false)\n    const [itemDelete, setItemDelete] = useState(0)\n    const handleDeleteProduct = () => {\n        delete_data(BACK_END_URL + `/admin/product/${itemDelete}`,\n            {}, true)\n            .then(res => {\n                setOpenDeleteDialog(false)\n                refresh_list()\n            })\n    }\n    const refresh_list = () => {\n        setState({...state, isLoading: true})\n        get_data(BACK_END_URL + '/public/all_product',\n            {\n                page: state.page,\n                item_per_page: state.item_per_page,\n                search: state.search,\n                order: state.order\n            }, false)\n            .then(res => setState({\n                ...state,\n                item_per_page: res.data.item_per_page,\n                list_product: res.data.list,\n                page: res.data.page,\n                total_page: res.data.total_page,\n                total: res.data.total,\n                isLoading: false\n            }))\n    }\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            setState({...state, isLoading: true})\n            get_data(BACK_END_URL + '/public/all_product',\n                {\n                    page: state.page,\n                    item_per_page: state.item_per_page,\n                    query: state.search,\n                    order: state.order,\n                }, false)\n                .then(res => setState({\n                    ...state,\n                    list_product: res.data.list,\n                    page: res.data.page,\n                    total_page: res.data.total_page,\n                    item_per_page: res.data.item_per_page,\n                    total: res.data.total,\n                    isLoading: false\n                }))\n        }\n    }\n    useEffect(() => {\n        setState({...state, isLoading: true})\n        get_data(BACK_END_URL + '/public/all_product',\n            {\n                page: state.page,\n                item_per_page: state.item_per_page,\n                query: state.search,\n                order: state.order\n            }, false)\n            .then(res => setState({\n                ...state,\n                item_per_page: res.data.item_per_page,\n                list_product: res.data.list,\n                page: res.data.page,\n                total_page: res.data.total_page,\n                total: res.data.total,\n                isLoading: false\n            }))\n    }, [state.order, state.item_per_page, state.page])\n    const handleChange = (e) => {\n        let name = e.target.name\n        let value = e.target.value\n        setState({\n            ...state,\n            [name]: value\n        })\n    }\n    const handleChangePage = (event, newPage) => {\n        setState({\n            ...state,\n            page: newPage + 1\n        });\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setState({\n            ...state,\n            page: 1,\n            item_per_page: event.target.value\n        })\n    };\n    return (\n        <Paper>\n            <div>\n                <Typography className={classes.allTable}>All</Typography>\n                <Divider/>\n                <div className={classes.searchContainer}>\n                    <select value={state.order} className={classes.selectContainer} onChange={handleChange}\n                            name='order'>\n                        <option value={'name,asc'} disabled>Chose filter</option>\n                        <option value={'name,asc'}>Name Asc</option>\n                        <option value={'name,desc'}>Name Desc</option>\n                        <option value={'count_click,asc'}>View Asc</option>\n                        <option value={'count_click,desc'}>View desc</option>\n                    </select>\n                    <HtmlTooltip disableHoverListener arrow={true} placement=\"bottom-start\"\n                                 title={\n                                     <React.Fragment>\n                                         <Typography style={{fontSize: '0.7rem'}}>{`Press `}\n                                             <div style={{\n                                                 border: \"1px solid #888a8c\",\n                                                 padding: '0 0.5rem 0 0.5rem',\n                                                 borderRadius: '3px',\n                                                 display: 'inline-block'\n                                             }}>\n                                                 <SubdirectoryArrowRightRoundedIcon\n                                                     style={{fontSize: '0.7rem', paddingRight: '0.3rem'}}/>\n                                                 Enter\n                                             </div>\n                                             {` to search`}</Typography>\n                                     </React.Fragment>\n                                 }\n                    >\n                        <Input className={classes.search} onKeyDown={handleKeyDown}\n                               id=\"input-with-icon-textfield\" disableUnderline\n                               onChange={handleChange}\n                               name=\"search\" value={state.searchValue}\n                               startAdornment={(<InputAdornment>\n                                   <SearchRoundedIcon style={{paddingLeft: '0.5rem', paddingRight: '0.5rem'}}/>\n                               </InputAdornment>)}\n                        />\n                    </HtmlTooltip>\n                </div>\n            </div>\n\n            <TableContainer style={{maxHeight: 450, height: 450, display : 'flex', flexDirection : 'row', justifyContent : 'center'}}>\n                {state.isLoading ?\n                    <CircularProgress style={{marginTop : '8rem'}}/> :\n                    <Table className={classes.table} stickyHeader aria-label=\"sticky table\">\n                        <TableHead>\n                            <TableRow className={classes.headerTable}>\n                                <TableCell align={'center'} style={{width: '5rem'}}><strong></strong></TableCell>\n                                <TableCell align=\"left\"><strong>Name</strong></TableCell>\n                                <TableCell align=\"center\"><strong>Price / Sale-Price </strong></TableCell>\n                                <TableCell align=\"center\"><strong>SubCategory</strong></TableCell>\n                                <TableCell align=\"center\"><strong>Category</strong></TableCell>\n                                <TableCell align=\"center\"><strong>Remain</strong></TableCell>\n                                <TableCell align=\"center\"><strong>New?</strong></TableCell>\n                                <TableCell align=\"center\"><strong>Hot?</strong></TableCell>\n                                <TableCell align={'center'}><strong>Action</strong></TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {state.list_product.map((row) => (\n                                <TableRow key={row.product_id}>\n                                    <TableCell align={'center'} style={{height: '20px'}}>\n                                        <img src={row.url_image_main} className={classes.imageMain}/>\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        <NavLink to={`/edit_product/${row.product_id}`}>{row.name}</NavLink>\n                                    </TableCell>\n                                    <TableCell\n                                        align=\"center\">{`$ ${Number(row.price).toLocaleString('en')} / $ ${Number(row.sale_price).toLocaleString('en')}`}</TableCell>\n                                    <TableCell align=\"center\">{row.sub_category? row.sub_category.name : ''}</TableCell>\n                                    <TableCell align=\"center\">{row.category? row.category.name : ''}</TableCell>\n                                    <TableCell align=\"center\">{row.remain}</TableCell>\n                                    <TableCell align=\"center\"><IsNewComponent is_new={row.is_new?1:0} product_id={row.product_id} /> </TableCell>\n                                    <TableCell align=\"center\"><IsHotComponent is_hot={row.is_hot?1:0} product_id={row.product_id} /> </TableCell>\n                                    <TableCell align=\"center\">\n                                        <div style={{\n                                            display: \"flex\",\n                                            flexDirection: \"row\",\n                                            justifyContent: 'center'\n                                        }}>\n                                            <IconButton style={{color: '#e91e63'}} onClick={(e) => {\n                                                setOpenDeleteDialog(true)\n                                                setItemDelete(row.product_id)\n                                            }}>\n                                                <RestoreFromTrashIcon/>\n                                            </IconButton>\n                                        </div>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                }\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                component=\"div\"\n                count={state.total}\n                rowsPerPage={state.item_per_page}\n                page={state.page - 1}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n            <DeleteDialog open={openDeleteDialog} onClose={() => setOpenDeleteDialog(false)}\n                          handleDelete={handleDeleteProduct}/>\n        </Paper>\n    );\n}","import React, {useEffect, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport {blue} from '@material-ui/core/colors';\nimport {TextField, Divider, Button} from \"@material-ui/core\";\nimport HelpIcon from '@material-ui/icons/Help';\nimport {post_data, put_data} from \"../../ApiCall\";\nimport {BACK_END_URL} from \"../../ServiceURL\";\n\nconst useStyles = makeStyles({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    container: {\n        padding: '1rem',\n        minWidth: '500px',\n        '&>*': {\n            marginTop: '1rem'\n        }\n    },\n    input: {\n        width: '100%'\n    },\n    icon: {\n        width: '100%'\n    },\n    footer: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginTop: '1rem',\n        justifyContent: 'flex-end'\n    }\n});\nexport default function EditBranchDialog(props) {\n    const {onClose, refresh_list, open, data} = props;\n    const classes = useStyles();\n    const [state, setState] = useState({\n        name: null,\n        address: null,\n        time_work: null,\n        phone: null,\n        email: null,\n        description: null\n    })\n    useEffect(() => {\n        setState({\n            name: data.name,\n            address: data.address,\n            time_work: data.time_work,\n            phone: data.phone,\n            email: data.email,\n            description: data.description\n        })\n    }, [data])\n\n    const handleAddCategory = () => {\n        put_data(BACK_END_URL + `/admin/branch/${data.branch_id}`, {}, {\n            name: state.name,\n            address: state.address,\n            time_work: state.time_work,\n            phone: state.phone,\n            email: state.email,\n            description: state.description\n        }, true)\n            .then(res => {\n                refresh_list()\n                onClose()\n            })\n            .catch(error => alert('Error when edit branch. Try again later'))\n    };\n    const handleChange = (e) => {\n        let name = e.target.name\n        let val = e.target.value\n        setState({\n            ...state,\n            [name]: val\n        })\n    }\n    return (\n        <Dialog aria-labelledby=\"edit-branch\" open={open}>\n            <DialogTitle id = \"edit-branch\">Add Branch</DialogTitle>\n            <Divider variant={'middle'}/>\n            <div className={classes.container}>\n                <TextField variant={'outlined'} placeholder={'Name'} required={true}\n                           name='name' value={state.name} onChange={handleChange} className={classes.input}></TextField>\n                <TextField variant={'outlined'} placeholder={'Address'} required={true}\n                           name='address' value={state.address} onChange={handleChange}\n                           className={classes.input}></TextField>\n                <TextField variant={'outlined'} placeholder={'Time Work'} required={true}\n                           name='time_work' value={state.time_work} onChange={handleChange}\n                           className={classes.input}></TextField>\n                <TextField variant={'outlined'} placeholder={'Phone'} required={true}\n                           name='phone' value={state.phone} onChange={handleChange}\n                           className={classes.input}></TextField>\n                <TextField variant={'outlined'} placeholder={'Email'} required={true}\n                           name='email' value={state.email} onChange={handleChange}\n                           className={classes.input}></TextField>\n                <TextField variant={'outlined'} placeholder={'Description'} required={true} multiline={true} rows={3}\n                           name='description' value={state.description} onChange={handleChange}\n                           className={classes.input}></TextField>\n                <div className={classes.footer}>\n                    <Button variant={'contained'} color={'primary'} onClick={handleAddCategory}>Save</Button>\n                    <Button style={{marginLeft: '0.5rem'}} onClick={onClose}>Cancel</Button>\n                </div>\n            </div>\n        </Dialog>\n    );\n}","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Box, IconButton} from \"@material-ui/core\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport RestoreFromTrashIcon from '@material-ui/icons/RestoreFromTrash';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '@fortawesome/fontawesome-free/js/all'\nimport {delete_data} from \"../../ApiCall\";\nimport {BACK_END_URL} from \"../../ServiceURL\";\nimport {Dialog, DialogTitle, Typography} from '@material-ui/core'\nimport DeleteDialog from \"../Dialog.Delete\";\nimport EditDialogCategory from \"../ParentCategory/Dialog.EditParCategory\";\nimport AddSubCategoryDialog from \"../Category/Dialog.AddCategory\";\nimport EditSubCategoryDialog from \"../Category/Dialog.EditCategory\";\nimport EditBranchDialog from \"./Dialog.EditBranch\";\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 500,\n        margin: \"3rem auto\",\n    },\n});\n\n\nexport default function TableBranch({data, refresh_list, parent}) {\n    const classes = useStyles();\n    const deleteBranch = () => {\n        let branch_id = itemDelete\n        setOpenDeleteDialog(false)\n        delete_data(BACK_END_URL + `/admin/branch/${branch_id}`, {}, true)\n            .then(res => refresh_list())\n            .catch(error => alert('Error while delete! Please make sure sub_category is None and list product of sub_category is None'))\n    }\n    const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n    const [itemDelete, setItemDelete] = React.useState(0)\n    const [openEditDialog, setOpenEditDialog] = React.useState(false)\n    const [dataEdit, setDataEdit] = React.useState({})\n    return (\n        <TableContainer component={Box}>\n            <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell style={{fontWeight: \"bold\"}}>Id</TableCell>\n                        <TableCell style={{fontWeight: \"bold\"}}>Name</TableCell>\n                        <TableCell style={{fontWeight: \"bold\"}}>Email</TableCell>\n                        <TableCell style={{fontWeight: \"bold\"}}>Phone</TableCell>\n                        <TableCell style={{fontWeight: \"bold\"}}>Address</TableCell>\n                        <TableCell align={\"center\"} style={{\n                        fontWeight: \"bold\",\n                    }}>Action</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {data.map((row) => (\n                        <TableRow key={row.branch_id}>\n                            <TableCell>{row.branch_id}</TableCell>\n                            <TableCell>\n                                {row.name}\n                            </TableCell>\n                            <TableCell>{row.email}</TableCell>\n                            <TableCell>{row.phone}</TableCell>\n                            <TableCell>{row.address}</TableCell>\n                            <TableCell align=\"center\">\n                                <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: 'center'}}>\n                                    <IconButton style={{color: '#4caf50'}} onClick={(e) => {\n                                        setOpenEditDialog(true)\n                                        setDataEdit(row)\n                                    }}>\n                                        <EditIcon/>\n                                    </IconButton>\n                                    <IconButton style={{color: '#e91e63'}} onClick={(e) => {\n                                        setOpenDeleteDialog(true)\n                                        setItemDelete(row.branch_id)\n                                    }}>\n                                        <RestoreFromTrashIcon/>\n                                    </IconButton>\n                                </div>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n            <DeleteDialog open={openDeleteDialog} onClose={() => setOpenDeleteDialog(false)}\n                          handleDelete={deleteBranch}/>\n            <EditBranchDialog open={openEditDialog} onClose={() => setOpenEditDialog(false)}\n                                   refresh_list={refresh_list} parent={parent} data={dataEdit}/>\n        </TableContainer>\n    );\n}"],"sourceRoot":""}